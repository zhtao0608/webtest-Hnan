【INFO】-【2020-12-25 10:08:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:08:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:08:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:08:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:08:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:08:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:08:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,is_leaf,iscore,'' test_result\r\nFROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null\r\nand  IS_LEAF = '1' AND menu_cata ='%s' and iscore='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,is_leaf,iscore,'' test_result\r\nFROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null\r\nand  IS_LEAF = '1' AND menu_cata ='%s' and iscore='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,is_leaf,iscore,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND menu_cata ='%s' and iscore='1'"}
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,is_leaf,iscore,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND menu_cata ='%s' and iscore='1'"}]
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,is_leaf,iscore,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND menu_cata ='crm991A' and iscore='1'
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9731', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->宽带开户', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm97A0', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->IMS单用户开户', 'dll_path': '/web-order/order?service=page/broadband.PersonIMSCreate&listener=onInitTrade', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm972E', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带业务变更->互联网电视', 'dll_path': '/web-order/order?service=page/broadband.InteractiveTV&listener=getProductList&TYPE_TAG=3', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9750', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm972F', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带续费->互联网电视续费', 'dll_path': '/web-order/order?service=page/broadband.InteractiveTVContinuePay', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm975D', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带续费->家宽续费', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewBroadBandContinuePay', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm94BE', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->废电视客服界面', 'dll_path': '/web-order/order?service=page/broadband.BroadBandTvInfoQuery', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9723', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->宽带移机', 'dll_path': '/web-order/order?service=page/broadband.MoveBroadBand', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm97B6', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm97B7', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'dll_path': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9728', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9730', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->宽带移机(客服)', 'dll_path': '/web-order/order?service=page/broadband.MoveBroadBand&listener=initPage', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9748', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9768', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm972H', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9734', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9772', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带业务返销', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.CancelTrades&listener=onInitTrade', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9775', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm939F', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->其它类->全业务捆绑营销注销(新)', 'dll_path': '/web-order/order?service=page/broadband.BundleChargesDestroy', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9941', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992B', 'menu_path': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享主卡业务办理', 'dll_path': '/web-order/order?service=page/order.page.pc.shareClusterFlow.ShareClusterFlow', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9942', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992B', 'menu_path': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享副卡业务办理', 'dll_path': '/web-order/order?service=page/order.page.pc.shareClusterFlow.MemberShareCluster', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9948', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992B', 'menu_path': '家庭业务->家庭通信->共享业务->4G套餐共享->共享类业务', 'dll_path': '/web-order/order?service=page/order.page.pc.tariffshare.TariffShare', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9275', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992D', 'menu_path': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'dll_path': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}]
【INFO】-【2020-12-25 10:08:25】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9731', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->宽带开户', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm97A0', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->IMS单用户开户', 'dll_path': '/web-order/order?service=page/broadband.PersonIMSCreate&listener=onInitTrade', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm972E', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带业务变更->互联网电视', 'dll_path': '/web-order/order?service=page/broadband.InteractiveTV&listener=getProductList&TYPE_TAG=3', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9750', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm972F', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带续费->互联网电视续费', 'dll_path': '/web-order/order?service=page/broadband.InteractiveTVContinuePay', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm975D', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带续费->家宽续费', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewBroadBandContinuePay', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm94BE', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->废电视客服界面', 'dll_path': '/web-order/order?service=page/broadband.BroadBandTvInfoQuery', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9723', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->宽带移机', 'dll_path': '/web-order/order?service=page/broadband.MoveBroadBand', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm97B6', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm97B7', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'dll_path': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9728', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9730', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->宽带移机(客服)', 'dll_path': '/web-order/order?service=page/broadband.MoveBroadBand&listener=initPage', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9748', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9768', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm972H', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9734', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9772', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带业务返销', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.CancelTrades&listener=onInitTrade', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9775', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm939F', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->其它类->全业务捆绑营销注销(新)', 'dll_path': '/web-order/order?service=page/broadband.BundleChargesDestroy', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9941', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992B', 'menu_path': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享主卡业务办理', 'dll_path': '/web-order/order?service=page/order.page.pc.shareClusterFlow.ShareClusterFlow', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9942', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992B', 'menu_path': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享副卡业务办理', 'dll_path': '/web-order/order?service=page/order.page.pc.shareClusterFlow.MemberShareCluster', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9948', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992B', 'menu_path': '家庭业务->家庭通信->共享业务->4G套餐共享->共享类业务', 'dll_path': '/web-order/order?service=page/order.page.pc.tariffshare.TariffShare', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}, {'func_id': 'crm9275', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992D', 'menu_path': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'dll_path': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'module': '家庭业务', 'is_leaf': '1', 'iscore': '1', 'test_result': ''}]
【INFO】-【2020-12-25 10:08:25】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【27】行 >> ========家庭业务核心菜单列表：[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97A0', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->IMS单用户开户', 'DLL_PATH': '/web-order/order?service=page/broadband.PersonIMSCreate&listener=onInitTrade', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm972E', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->互联网电视', 'DLL_PATH': '/web-order/order?service=page/broadband.InteractiveTV&listener=getProductList&TYPE_TAG=3', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm972F', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带续费->互联网电视续费', 'DLL_PATH': '/web-order/order?service=page/broadband.InteractiveTVContinuePay', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm975D', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带续费->家宽续费', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewBroadBandContinuePay', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm94BE', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->废电视客服界面', 'DLL_PATH': '/web-order/order?service=page/broadband.BroadBandTvInfoQuery', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9723', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->宽带移机', 'DLL_PATH': '/web-order/order?service=page/broadband.MoveBroadBand', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9730', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带移机(客服)', 'DLL_PATH': '/web-order/order?service=page/broadband.MoveBroadBand&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9772', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带业务返销', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.CancelTrades&listener=onInitTrade', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm939F', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->其它类->全业务捆绑营销注销(新)', 'DLL_PATH': '/web-order/order?service=page/broadband.BundleChargesDestroy', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9941', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992B', 'MENU_PATH': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享主卡业务办理', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.shareClusterFlow.ShareClusterFlow', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9942', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992B', 'MENU_PATH': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享副卡业务办理', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.shareClusterFlow.MemberShareCluster', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9948', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992B', 'MENU_PATH': '家庭业务->家庭通信->共享业务->4G套餐共享->共享类业务', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.tariffshare.TariffShare', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm3480', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9731', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带开户->宽带开户', '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm97A0', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->IMS单用户开户', 'DLL_PATH': '/web-order/order?service=page/broadband.PersonIMSCreate&listener=onInitTrade', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm97A0', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带开户->IMS单用户开户', '/web-order/order?service=page/broadband.PersonIMSCreate&listener=onInitTrade', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm972E', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->互联网电视', 'DLL_PATH': '/web-order/order?service=page/broadband.InteractiveTV&listener=getProductList&TYPE_TAG=3', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm972E', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带业务变更->互联网电视', '/web-order/order?service=page/broadband.InteractiveTV&listener=getProductList&TYPE_TAG=3', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9750', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带业务变更->宽带提速', '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm972F', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带续费->互联网电视续费', 'DLL_PATH': '/web-order/order?service=page/broadband.InteractiveTVContinuePay', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm972F', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带续费->互联网电视续费', '/web-order/order?service=page/broadband.InteractiveTVContinuePay', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm975D', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带续费->家宽续费', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewBroadBandContinuePay', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm975D', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带续费->家宽续费', '/web-order/order?service=page/order.page.pc.broadband.NewBroadBandContinuePay', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm94BE', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->废电视客服界面', 'DLL_PATH': '/web-order/order?service=page/broadband.BroadBandTvInfoQuery', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm94BE', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带状态变更->废电视客服界面', '/web-order/order?service=page/broadband.BroadBandTvInfoQuery', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9723', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->宽带移机', 'DLL_PATH': '/web-order/order?service=page/broadband.MoveBroadBand', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9723', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带状态变更->宽带移机', '/web-order/order?service=page/broadband.MoveBroadBand', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm97B6', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带状态变更->家宽拆机', '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm97B7', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', '/web-order/order?service=page/plat.BroadBandBusiAddNew', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9728', 'crm991A', 'crm9700', '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9730', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带移机(客服)', 'DLL_PATH': '/web-order/order?service=page/broadband.MoveBroadBand&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9730', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带客服类->宽带移机(客服)', '/web-order/order?service=page/broadband.MoveBroadBand&listener=initPage', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9748', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9768', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm972H', 'crm991A', 'crm9700', '家庭业务->宽带业务->后台管理->互联网电视变更牌照', '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9734', 'crm991A', 'crm9700', '家庭业务->宽带业务->后台管理->宽带端口解绑', '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9772', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带业务返销', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.CancelTrades&listener=onInitTrade', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9772', 'crm991A', 'crm9700', '家庭业务->宽带业务->后台管理->宽带业务返销', '/web-order/order?service=page/order.page.pc.broadband.CancelTrades&listener=onInitTrade', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9775', 'crm991A', 'crm9700', '家庭业务->宽带业务->后台管理->宽带卡单重新派单', '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm939F', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->其它类->全业务捆绑营销注销(新)', 'DLL_PATH': '/web-order/order?service=page/broadband.BundleChargesDestroy', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm939F', 'crm991A', 'crm9700', '家庭业务->宽带业务->其它类->全业务捆绑营销注销(新)', '/web-order/order?service=page/broadband.BundleChargesDestroy', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9941', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992B', 'MENU_PATH': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享主卡业务办理', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.shareClusterFlow.ShareClusterFlow', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9941', 'crm991A', 'crm992B', '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享主卡业务办理', '/web-order/order?service=page/order.page.pc.shareClusterFlow.ShareClusterFlow', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9942', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992B', 'MENU_PATH': '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享副卡业务办理', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.shareClusterFlow.MemberShareCluster', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9942', 'crm991A', 'crm992B', '家庭业务->家庭通信->共享业务->4G套餐共享->4G流量共享副卡业务办理', '/web-order/order?service=page/order.page.pc.shareClusterFlow.MemberShareCluster', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9948', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992B', 'MENU_PATH': '家庭业务->家庭通信->共享业务->4G套餐共享->共享类业务', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.tariffshare.TariffShare', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9948', 'crm991A', 'crm992B', '家庭业务->家庭通信->共享业务->4G套餐共享->共享类业务', '/web-order/order?service=page/order.page.pc.tariffshare.TariffShare', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:08:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9275', 'crm991A', 'crm992D', '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:08:25】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【87】行 >> 开始执行testSuite......
【INFO】-【2020-12-25 10:08:34】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:08:34】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留
【INFO】-【2020-12-25 10:08:34】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm3480
【INFO】-【2020-12-25 10:08:34】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi
【INFO】-【2020-12-25 10:08:34】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:08:34】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:08:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:08:38】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="10d5f7ded2f46b97fed2331c43dbdaa0", element="0.013071638622544235-1")>
【INFO】-【2020-12-25 10:08:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:08:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="10d5f7ded2f46b97fed2331c43dbdaa0", element="0.013071638622544235-2")>
【INFO】-【2020-12-25 10:08:48】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:08:48】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="10d5f7ded2f46b97fed2331c43dbdaa0", element="0.013071638622544235-3")>
【INFO】-【2020-12-25 10:08:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result\r\nFROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null\r\nand  IS_LEAF = '1' AND func_id ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result\r\nFROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null\r\nand  IS_LEAF = '1' AND func_id ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND func_id ='%s'"}
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND func_id ='%s'"}]
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND func_id ='crm3480'
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}]
【INFO】-【2020-12-25 10:08:53】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:08:53】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:08:53】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="10d5f7ded2f46b97fed2331c43dbdaa0", element="0.13503922771187504-1")>
【INFO】-【2020-12-25 10:08:53】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:08:53】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="10d5f7ded2f46b97fed2331c43dbdaa0", element="0.9457569941254598-1")>
【INFO】-【2020-12-25 10:08:55】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:08:55】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="10d5f7ded2f46b97fed2331c43dbdaa0", element="0.9457569941254598-2")>
【INFO】-【2020-12-25 10:08:57】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//*li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:09:03】 - 【MainPage】 - 【mainpage.py】 - 第【109】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:09:03】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:09:08】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm3480']，value值->
【INFO】-【2020-12-25 10:09:13】 - 【MainPage】 - 【mainpage.py】 - 第【112】行 >> 菜单ID：crm3480
【INFO】-【2020-12-25 10:09:13】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:09:18】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:09:29】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:09:29】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带开户->宽带开户
【INFO】-【2020-12-25 10:09:29】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9731
【INFO】-【2020-12-25 10:09:29】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV
【INFO】-【2020-12-25 10:09:29】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:09:29】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:09:31】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:09:31】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3a0bdf546e540a38ab6d9c21cd5b8f04", element="0.5885720634354179-1")>
【INFO】-【2020-12-25 10:09:31】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:09:31】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3a0bdf546e540a38ab6d9c21cd5b8f04", element="0.5885720634354179-2")>
【INFO】-【2020-12-25 10:09:32】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:09:32】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3a0bdf546e540a38ab6d9c21cd5b8f04", element="0.5885720634354179-3")>
【INFO】-【2020-12-25 10:09:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result\r\nFROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null\r\nand  IS_LEAF = '1' AND func_id ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result\r\nFROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null\r\nand  IS_LEAF = '1' AND func_id ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND func_id ='%s'"}
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND func_id ='%s'"}]
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT func_id,menu_cata,parent_func_id,menu_path,dll_path,module,iscore,is_leaf,'' test_result  FROM autotest_menu WHERE STATE = '1' AND prov_code = 'HNAN'  and  dll_path is not null  and  IS_LEAF = '1' AND func_id ='crm9731'
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'func_id': 'crm9731', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->宽带开户', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}]
【INFO】-【2020-12-25 10:09:36】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'func_id': 'crm9731', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->宽带开户', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:09:36】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:09:36】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3a0bdf546e540a38ab6d9c21cd5b8f04", element="0.7905023760717154-1")>
【INFO】-【2020-12-25 10:09:36】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:09:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3a0bdf546e540a38ab6d9c21cd5b8f04", element="0.6350949482273482-1")>
【INFO】-【2020-12-25 10:09:39】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:09:39】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3a0bdf546e540a38ab6d9c21cd5b8f04", element="0.6350949482273482-2")>
【INFO】-【2020-12-25 10:09:41】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//*li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:09:47】 - 【MainPage】 - 【mainpage.py】 - 第【109】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:09:47】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:09:52】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9731']，value值->
【INFO】-【2020-12-25 10:09:57】 - 【MainPage】 - 【mainpage.py】 - 第【112】行 >> 菜单ID：crm9731
【INFO】-【2020-12-25 10:10:04】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:10:09】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:14:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:14:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:14:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:14:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:14:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:14:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:14:56】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:14:56】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:15:00】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:15:00】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3dc86bb007ce947ac832535f6453e822", element="0.4931428137812901-1")>
【INFO】-【2020-12-25 10:15:00】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:15:00】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3dc86bb007ce947ac832535f6453e822", element="0.4931428137812901-2")>
【INFO】-【2020-12-25 10:15:01】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:15:01】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="3dc86bb007ce947ac832535f6453e822", element="0.4931428137812901-3")>
【INFO】-【2020-12-25 10:15:05】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm3480'
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:15:05】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:16:54】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:16:54】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:16:54】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:16:54】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:16:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:16:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:17:04】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:17:04】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:17:08】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:17:08】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="aab4031026c33c71197d55bce47df5ca", element="0.14527172776537478-1")>
【INFO】-【2020-12-25 10:17:08】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:17:08】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="aab4031026c33c71197d55bce47df5ca", element="0.14527172776537478-2")>
【INFO】-【2020-12-25 10:17:09】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:17:09】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="aab4031026c33c71197d55bce47df5ca", element="0.14527172776537478-3")>
【INFO】-【2020-12-25 10:17:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm3480'
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:17:14】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:19:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:19:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:19:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:19:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:19:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:19:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:19:57】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:19:57】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:20:00】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:20:00】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="8068dfdfec2fec8eebb683eacd97dd69", element="0.4707832016221125-1")>
【INFO】-【2020-12-25 10:20:01】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:20:01】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="8068dfdfec2fec8eebb683eacd97dd69", element="0.4707832016221125-2")>
【INFO】-【2020-12-25 10:20:02】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:20:02】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="8068dfdfec2fec8eebb683eacd97dd69", element="0.4707832016221125-3")>
【INFO】-【2020-12-25 10:20:06】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm3480'
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:20:06】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:21:18】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:21:18】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:21:18】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:21:18】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:21:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:21:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:21:28】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:21:28】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:21:34】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:21:34】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f956f4764a19499a1b2c0ca59aa6a322", element="0.22834464840830382-1")>
【INFO】-【2020-12-25 10:21:34】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:21:34】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f956f4764a19499a1b2c0ca59aa6a322", element="0.22834464840830382-2")>
【INFO】-【2020-12-25 10:21:35】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:21:35】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f956f4764a19499a1b2c0ca59aa6a322", element="0.22834464840830382-3")>
【INFO】-【2020-12-25 10:21:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm3480'
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:21:40】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:21:40】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:21:40】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:21:40】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:21:40】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f956f4764a19499a1b2c0ca59aa6a322", element="0.14791865316654573-1")>
【INFO】-【2020-12-25 10:21:40】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:21:40】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f956f4764a19499a1b2c0ca59aa6a322", element="0.2457674382033499-1")>
【INFO】-【2020-12-25 10:21:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:21:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f956f4764a19499a1b2c0ca59aa6a322", element="0.2457674382033499-2")>
【INFO】-【2020-12-25 10:21:44】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//*li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:21:50】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:21:50】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:21:55】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm3480']，value值->
【INFO】-【2020-12-25 10:22:00】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm3480
【INFO】-【2020-12-25 10:25:29】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:25:29】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:25:29】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:25:29】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:25:29】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:25:29】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:25:37】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:25:37】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:25:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:25:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1566ba57a75b3183c2c1f22d7586a336", element="0.26208534186162225-1")>
【INFO】-【2020-12-25 10:25:48】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:25:48】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1566ba57a75b3183c2c1f22d7586a336", element="0.26208534186162225-2")>
【INFO】-【2020-12-25 10:25:49】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:25:49】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1566ba57a75b3183c2c1f22d7586a336", element="0.26208534186162225-3")>
【INFO】-【2020-12-25 10:25:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm3480'
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:25:53】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:25:53】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:25:53】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:26:05】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:26:05】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1566ba57a75b3183c2c1f22d7586a336", element="0.9843204529426193-1")>
【INFO】-【2020-12-25 10:26:05】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:26:05】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1566ba57a75b3183c2c1f22d7586a336", element="0.8098301147759341-1")>
【INFO】-【2020-12-25 10:26:11】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:26:11】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1566ba57a75b3183c2c1f22d7586a336", element="0.8098301147759341-2")>
【INFO】-【2020-12-25 10:26:59】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//*li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:27:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:27:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:27:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:27:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:27:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:27:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:27:55】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:27:55】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:27:58】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:27:58】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.9366033911680618-1")>
【INFO】-【2020-12-25 10:27:59】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:27:59】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.9366033911680618-2")>
【INFO】-【2020-12-25 10:28:00】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:28:00】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.9366033911680618-3")>
【INFO】-【2020-12-25 10:28:04】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm3480'
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:28:04】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:28:04】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:28:04】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:28:12】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:28:12】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.2130627837147947-1")>
【INFO】-【2020-12-25 10:28:12】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:28:12】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.4927901917326616-1")>
【INFO】-【2020-12-25 10:28:20】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:28:20】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.4927901917326616-2")>
【INFO】-【2020-12-25 10:28:38】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:28:38】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.4927901917326616-3")>
【INFO】-【2020-12-25 10:28:53】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:28:56】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:28:56】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="906d7d014c4eb40c358ba6827b87f226", element="0.4927901917326616-4")>
【INFO】-【2020-12-25 10:29:05】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm3480']，value值->
【INFO】-【2020-12-25 10:29:16】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm3480
【INFO】-【2020-12-25 10:29:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:29:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:29:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:29:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:29:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:29:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:29:53】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:29:53】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:29:56】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:29:56】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.9798983660394536-1")>
【INFO】-【2020-12-25 10:29:56】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:29:56】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.9798983660394536-2")>
【INFO】-【2020-12-25 10:29:57】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:29:57】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.9798983660394536-3")>
【INFO】-【2020-12-25 10:30:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm3480'
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:30:02】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:30:02】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm3480', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:30:02】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm3480', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->新宽带一单清-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.NewFusionBroadBand&listener=onInitBusi', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:30:07】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:30:07】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.4677260726297243-1")>
【INFO】-【2020-12-25 10:30:07】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:30:07】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.5123774263660161-1")>
【INFO】-【2020-12-25 10:30:14】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:30:14】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.5123774263660161-2")>
【INFO】-【2020-12-25 10:30:31】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:30:31】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.5123774263660161-3")>
【INFO】-【2020-12-25 10:30:53】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:31:06】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:31:06】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="da009e6d38bdf22f921e589cda9fe08b", element="0.5123774263660161-4")>
【INFO】-【2020-12-25 10:31:39】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm3480']，value值->
【INFO】-【2020-12-25 10:44:14】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:44:14】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:44:14】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:44:15】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:44:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:44:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:44:24】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:44:24】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:44:27】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:44:27】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.1028306994654744-1")>
【INFO】-【2020-12-25 10:44:28】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:44:28】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.1028306994654744-2")>
【INFO】-【2020-12-25 10:44:29】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:44:29】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.1028306994654744-3")>
【INFO】-【2020-12-25 10:44:33】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9731'
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:44:33】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:44:33】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:44:33】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9731', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->宽带开户', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:44:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:44:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.9777837767782922-1")>
【INFO】-【2020-12-25 10:44:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:44:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.5515997480826031-1")>
【INFO】-【2020-12-25 10:44:35】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:44:35】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.5515997480826031-2")>
【INFO】-【2020-12-25 10:44:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:44:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.5515997480826031-3")>
【INFO】-【2020-12-25 10:44:40】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:44:40】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:44:40】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.5515997480826031-4")>
【INFO】-【2020-12-25 10:44:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9731']，value值->
【INFO】-【2020-12-25 10:44:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.5515997480826031-5")>
【INFO】-【2020-12-25 10:44:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9731']，value值->
【INFO】-【2020-12-25 10:44:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.5515997480826031-5")>
【INFO】-【2020-12-25 10:44:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9731']，value值->
【INFO】-【2020-12-25 10:44:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.5515997480826031-5")>
【INFO】-【2020-12-25 10:44:43】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 宽带开户 > 宽带开户
【INFO】-【2020-12-25 10:44:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV')]，value值->
【INFO】-【2020-12-25 10:44:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.9777837767782922-2")>
【INFO】-【2020-12-25 10:44:43】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="08db11b70fdf1a6f488b98ddd54ec763", element="0.9777837767782922-2")>
【INFO】-【2020-12-25 10:44:44】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9731
【INFO】-【2020-12-25 10:47:10】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginName' ;  
              
【INFO】-【2020-12-25 10:47:10】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数HNTEST02
【INFO】-【2020-12-25 10:47:10】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.LoginPwd' ;  
              
【INFO】-【2020-12-25 10:47:10】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数lc
【INFO】-【2020-12-25 10:47:10】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:47:10】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:47:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,IS_LEAF,ISCORE,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND MENU_CATA ='%s' AND ISCORE='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,IS_LEAF,ISCORE,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND MENU_CATA ='%s' AND ISCORE='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,IS_LEAF,ISCORE,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND MENU_CATA ='%s' AND ISCORE='1'"}
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,IS_LEAF,ISCORE,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND MENU_CATA ='%s' AND ISCORE='1'"}]
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,IS_LEAF,ISCORE,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND MENU_CATA ='crm991A' AND ISCORE='1'
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:47:12】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:47:12】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【27】行 >> ========家庭业务核心菜单列表：[{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}, {'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9731', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带开户->宽带开户', '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9750', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带业务变更->宽带提速', '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm97B6', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带状态变更->家宽拆机', '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm97B7', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', '/web-order/order?service=page/plat.BroadBandBusiAddNew', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9728', 'crm991A', 'crm9700', '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9748', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9768', 'crm991A', 'crm9700', '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm972H', 'crm991A', 'crm9700', '家庭业务->宽带业务->后台管理->互联网电视变更牌照', '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9734', 'crm991A', 'crm9700', '家庭业务->宽带业务->后台管理->宽带端口解绑', '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9775', 'crm991A', 'crm9700', '家庭业务->宽带业务->后台管理->宽带卡单重新派单', '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'IS_LEAF': '1', 'ISCORE': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['crm9275', 'crm991A', 'crm992D', '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', '家庭业务', '1', '1', '']
【INFO】-【2020-12-25 10:47:12】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【87】行 >> 开始执行testSuite......
【INFO】-【2020-12-25 10:47:21】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:47:21】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带开户->宽带开户
【INFO】-【2020-12-25 10:47:21】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9731
【INFO】-【2020-12-25 10:47:21】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV
【INFO】-【2020-12-25 10:47:22】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:47:22】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:47:25】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:47:25】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.8361573758406939-1")>
【INFO】-【2020-12-25 10:47:31】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:47:31】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.8361573758406939-2")>
【INFO】-【2020-12-25 10:47:36】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:47:36】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.8361573758406939-3")>
【INFO】-【2020-12-25 10:47:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9731'
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:47:41】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:41】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9731', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带开户->宽带开户', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:47:41】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9731', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带开户->宽带开户', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:47:41】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:47:41】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.7898686505235788-1")>
【INFO】-【2020-12-25 10:47:41】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:47:41】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.012114903472027816-1")>
【INFO】-【2020-12-25 10:47:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:47:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.012114903472027816-2")>
【INFO】-【2020-12-25 10:47:45】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:47:45】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.012114903472027816-3")>
【INFO】-【2020-12-25 10:47:48】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:47:48】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:47:48】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.012114903472027816-4")>
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9731']，value值->
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.012114903472027816-5")>
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9731']，value值->
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.012114903472027816-5")>
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9731']，value值->
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.012114903472027816-5")>
【INFO】-【2020-12-25 10:47:50】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 宽带开户 > 宽带开户
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV')]，value值->
【INFO】-【2020-12-25 10:47:50】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.7898686505235788-2")>
【INFO】-【2020-12-25 10:47:50】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="e89862fb669fc1d2f0716a70232b7609", element="0.7898686505235788-2")>
【INFO】-【2020-12-25 10:47:51】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9731
【INFO】-【2020-12-25 10:47:52】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:47:57】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:48:07】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:48:07】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带业务变更->宽带提速
【INFO】-【2020-12-25 10:48:07】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9750
【INFO】-【2020-12-25 10:48:07】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed
【INFO】-【2020-12-25 10:48:07】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:48:07】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:48:09】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:48:09】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.5352145246002757-1")>
【INFO】-【2020-12-25 10:48:14】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:48:14】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.5352145246002757-2")>
【INFO】-【2020-12-25 10:48:15】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:48:15】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.5352145246002757-3")>
【INFO】-【2020-12-25 10:48:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9750'
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:48:19】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:48:19】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9750', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:48:19】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9750', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带业务变更->宽带提速', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:48:19】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:48:20】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.3273076382943061-1")>
【INFO】-【2020-12-25 10:48:20】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:48:20】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.7696302106314337-1")>
【INFO】-【2020-12-25 10:48:22】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:48:22】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.7696302106314337-2")>
【INFO】-【2020-12-25 10:48:24】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:48:24】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.7696302106314337-3")>
【INFO】-【2020-12-25 10:48:27】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:48:27】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:48:27】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.7696302106314337-4")>
【INFO】-【2020-12-25 10:48:29】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9750']，value值->
【INFO】-【2020-12-25 10:48:29】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.7696302106314337-5")>
【INFO】-【2020-12-25 10:48:29】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9750']，value值->
【INFO】-【2020-12-25 10:48:29】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.7696302106314337-5")>
【INFO】-【2020-12-25 10:48:30】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9750']，value值->
【INFO】-【2020-12-25 10:48:30】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.7696302106314337-5")>
【INFO】-【2020-12-25 10:48:30】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 宽带业务变更 > 宽带提速
【INFO】-【2020-12-25 10:48:30】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.broadband.BroadbandChangeSpeed')]，value值->
【INFO】-【2020-12-25 10:48:30】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.3273076382943061-2")>
【INFO】-【2020-12-25 10:48:30】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="4fb2d1ab19c065d0d8b27c1ef9b8cda3", element="0.3273076382943061-2")>
【INFO】-【2020-12-25 10:48:31】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9750
【INFO】-【2020-12-25 10:48:32】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:48:37】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:48:47】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:48:47】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带状态变更->家宽拆机
【INFO】-【2020-12-25 10:48:47】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm97B6
【INFO】-【2020-12-25 10:48:47】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew
【INFO】-【2020-12-25 10:48:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:48:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:48:48】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:48:48】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.21495991190878772-1")>
【INFO】-【2020-12-25 10:48:48】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:48:48】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.21495991190878772-2")>
【INFO】-【2020-12-25 10:48:49】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:48:49】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.21495991190878772-3")>
【INFO】-【2020-12-25 10:48:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm97B6'
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:48:53】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:48:53】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm97B6', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:48:53】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm97B6', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->家宽拆机', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:48:53】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:48:53】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.657485451686336-1")>
【INFO】-【2020-12-25 10:48:53】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:48:53】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.34339727046359925-1")>
【INFO】-【2020-12-25 10:48:55】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:48:56】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.34339727046359925-2")>
【INFO】-【2020-12-25 10:48:58】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:48:58】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.34339727046359925-3")>
【INFO】-【2020-12-25 10:49:01】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:49:01】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:49:01】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.34339727046359925-4")>
【INFO】-【2020-12-25 10:49:03】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm97B6']，value值->
【INFO】-【2020-12-25 10:49:03】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.34339727046359925-5")>
【INFO】-【2020-12-25 10:49:03】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm97B6']，value值->
【INFO】-【2020-12-25 10:49:03】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.34339727046359925-5")>
【INFO】-【2020-12-25 10:49:04】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm97B6']，value值->
【INFO】-【2020-12-25 10:49:04】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.34339727046359925-5")>
【INFO】-【2020-12-25 10:49:04】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 宽带状态变更 > 家宽拆机
【INFO】-【2020-12-25 10:49:04】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.broadband.BroadBandDestroyNew')]，value值->
【INFO】-【2020-12-25 10:49:04】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.657485451686336-2")>
【INFO】-【2020-12-25 10:49:04】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="1a9698d683614f549b5231eb52134bdd", element="0.657485451686336-2")>
【INFO】-【2020-12-25 10:49:05】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm97B6
【INFO】-【2020-12-25 10:49:05】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:49:10】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:49:20】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:49:20】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更
【INFO】-【2020-12-25 10:49:20】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm97B7
【INFO】-【2020-12-25 10:49:20】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/plat.BroadBandBusiAddNew
【INFO】-【2020-12-25 10:49:20】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:49:20】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:49:21】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:49:21】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.10350662604727945-1")>
【INFO】-【2020-12-25 10:49:21】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:49:21】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.10350662604727945-2")>
【INFO】-【2020-12-25 10:49:22】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:49:22】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.10350662604727945-3")>
【INFO】-【2020-12-25 10:49:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm97B7'
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:49:26】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:49:26】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm97B7', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'DLL_PATH': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:49:26】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm97B7', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带状态变更->家宽产品增值业务变更', 'dll_path': '/web-order/order?service=page/plat.BroadBandBusiAddNew', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:49:26】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:49:26】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.47033158909823425-1")>
【INFO】-【2020-12-25 10:49:26】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:49:26】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.23966519234855976-1")>
【INFO】-【2020-12-25 10:49:28】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:49:28】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.23966519234855976-2")>
【INFO】-【2020-12-25 10:49:30】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:49:30】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.23966519234855976-3")>
【INFO】-【2020-12-25 10:49:33】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:49:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:49:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.23966519234855976-4")>
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm97B7']，value值->
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.23966519234855976-5")>
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm97B7']，value值->
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.23966519234855976-5")>
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm97B7']，value值->
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.23966519234855976-5")>
【INFO】-【2020-12-25 10:49:36】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 宽带状态变更 > 家宽产品增值业务变更
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/plat.BroadBandBusiAddNew')]，value值->
【INFO】-【2020-12-25 10:49:36】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.47033158909823425-2")>
【INFO】-【2020-12-25 10:49:36】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.47033158909823425-2")>
【INFO】-【2020-12-25 10:49:37】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm97B7
【INFO】-【2020-12-25 10:49:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:49:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.8592939205272105-1")>
【INFO】-【2020-12-25 10:49:37】 - 【PageAssert】 - 【PageCheck.py】 - 第【108】行 >> 找到WadeMsg弹出框:<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.8592939205272105-1")>
【INFO】-【2020-12-25 10:49:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:49:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6e9d75000ad876239bfc1756db4d740a", element="0.8592939205272105-1")>
【INFO】-【2020-12-25 10:49:37】 - 【PageAssert】 - 【PageCheck.py】 - 第【110】行 >> wadeMsg的类型:c_msg c_msg-full c_msg-h c_msg-error c_msg-phone-v
【INFO】-【2020-12-25 10:49:39】 - 【PageAssert】 - 【PageCheck.py】 - 第【113】行 >> WadeMessageBox返回的信息：Page 'plat.BroadBandBusiAddNew' not found in application namespace.
显示详细信息
【INFO】-【2020-12-25 10:49:39】 - 【PageAssert】 - 【PageCheck.py】 - 第【116】行 >> 校验失败:Page 'plat.BroadBandBusiAddNew' not found in application namespace.
显示详细信息
【INFO】-【2020-12-25 10:49:43】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============校验失败Page 'plat.BroadBandBusiAddNew' not found in application namespace.
显示详细信息
【INFO】-【2020-12-25 10:49:57】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:49:57】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留
【INFO】-【2020-12-25 10:49:57】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9728
【INFO】-【2020-12-25 10:49:57】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage
【INFO】-【2020-12-25 10:49:57】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:49:57】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:49:58】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:49:58】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.6115864571371745-1")>
【INFO】-【2020-12-25 10:49:59】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:49:59】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.6115864571371745-2")>
【INFO】-【2020-12-25 10:50:00】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:50:00】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.6115864571371745-3")>
【INFO】-【2020-12-25 10:50:04】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9728'
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:50:04】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:50:04】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9728', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:50:04】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9728', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->资料变更类->宽带密码变更-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:50:04】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:50:04】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.31979657444620213-1")>
【INFO】-【2020-12-25 10:50:04】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:50:04】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.08071218201518682-1")>
【INFO】-【2020-12-25 10:50:06】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:50:06】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.08071218201518682-2")>
【INFO】-【2020-12-25 10:50:08】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:50:08】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.08071218201518682-3")>
【INFO】-【2020-12-25 10:50:11】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:50:11】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:50:11】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.08071218201518682-4")>
【INFO】-【2020-12-25 10:50:13】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9728']，value值->
【INFO】-【2020-12-25 10:50:13】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.08071218201518682-5")>
【INFO】-【2020-12-25 10:50:13】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9728']，value值->
【INFO】-【2020-12-25 10:50:13】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.08071218201518682-5")>
【INFO】-【2020-12-25 10:50:14】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9728']，value值->
【INFO】-【2020-12-25 10:50:14】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.08071218201518682-5")>
【INFO】-【2020-12-25 10:50:14】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 资料变更类 > 宽带密码变更-重复保留
【INFO】-【2020-12-25 10:50:14】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage')]，value值->
【INFO】-【2020-12-25 10:50:14】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.31979657444620213-2")>
【INFO】-【2020-12-25 10:50:14】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="6bc767b98901a0cc21e0bed38b01f301", element="0.31979657444620213-2")>
【INFO】-【2020-12-25 10:50:15】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9728
【INFO】-【2020-12-25 10:50:15】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:50:20】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:50:30】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:50:30】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留
【INFO】-【2020-12-25 10:50:30】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9748
【INFO】-【2020-12-25 10:50:30】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa
【INFO】-【2020-12-25 10:50:30】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:50:30】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:50:31】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:50:31】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.01923743123739108-1")>
【INFO】-【2020-12-25 10:50:32】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:50:32】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.01923743123739108-2")>
【INFO】-【2020-12-25 10:50:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:50:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.01923743123739108-3")>
【INFO】-【2020-12-25 10:50:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9748'
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:50:37】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:50:37】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9748', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:50:37】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9748', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->10086宽带开户-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:50:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:50:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.2160757325582865-1")>
【INFO】-【2020-12-25 10:50:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:50:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.5048649646518917-1")>
【INFO】-【2020-12-25 10:50:39】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:50:39】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.5048649646518917-2")>
【INFO】-【2020-12-25 10:50:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:50:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.5048649646518917-3")>
【INFO】-【2020-12-25 10:50:45】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:50:45】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:50:45】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.5048649646518917-4")>
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9748']，value值->
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.5048649646518917-5")>
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9748']，value值->
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.5048649646518917-5")>
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9748']，value值->
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.5048649646518917-5")>
【INFO】-【2020-12-25 10:50:47】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 宽带客服类 > 10086宽带开户-重复保留
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.broadband.BroadbandCreate&listener=onInitBusi&cond_CREATE_TYPE=PERSONSERV&strtest=testa')]，value值->
【INFO】-【2020-12-25 10:50:47】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.2160757325582865-2")>
【INFO】-【2020-12-25 10:50:47】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="0faba3c16baa682e69690e180d7cb14e", element="0.2160757325582865-2")>
【INFO】-【2020-12-25 10:50:48】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9748
【INFO】-【2020-12-25 10:50:49】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:50:54】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:51:26】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:51:26】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留
【INFO】-【2020-12-25 10:51:26】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9768
【INFO】-【2020-12-25 10:51:26】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true
【INFO】-【2020-12-25 10:51:26】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:51:26】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:51:27】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:51:27】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5833336986057363-1")>
【INFO】-【2020-12-25 10:51:27】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:51:28】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5833336986057363-2")>
【INFO】-【2020-12-25 10:51:29】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:51:29】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5833336986057363-3")>
【INFO】-【2020-12-25 10:51:33】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9768'
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:51:33】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:51:33】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9768', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:51:33】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9768', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->宽带客服类->宽带密码变更(客服)-重复保留', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:51:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:51:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.4049414859775957-1")>
【INFO】-【2020-12-25 10:51:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:51:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5885980671130628-1")>
【INFO】-【2020-12-25 10:51:35】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:51:35】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5885980671130628-2")>
【INFO】-【2020-12-25 10:51:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:51:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5885980671130628-3")>
【INFO】-【2020-12-25 10:51:40】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:51:40】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:51:40】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5885980671130628-4")>
【INFO】-【2020-12-25 10:51:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9768']，value值->
【INFO】-【2020-12-25 10:51:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5885980671130628-5")>
【INFO】-【2020-12-25 10:51:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9768']，value值->
【INFO】-【2020-12-25 10:51:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5885980671130628-5")>
【INFO】-【2020-12-25 10:51:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9768']，value值->
【INFO】-【2020-12-25 10:51:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.5885980671130628-5")>
【INFO】-【2020-12-25 10:51:43】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 宽带客服类 > 宽带密码变更(客服)-重复保留
【INFO】-【2020-12-25 10:51:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.person.broadband.passwdchg.BroadBandPassWDCHG&listener=initPage&REAL_TAG=true')]，value值->
【INFO】-【2020-12-25 10:51:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.4049414859775957-2")>
【INFO】-【2020-12-25 10:51:43】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="ea081675eca685dfb16d7670097d0ee3", element="0.4049414859775957-2")>
【INFO】-【2020-12-25 10:51:44】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9768
【INFO】-【2020-12-25 10:51:45】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:51:50】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:52:00】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:52:00】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->后台管理->互联网电视变更牌照
【INFO】-【2020-12-25 10:52:00】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm972H
【INFO】-【2020-12-25 10:52:00】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0
【INFO】-【2020-12-25 10:52:00】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:52:00】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:52:02】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:52:02】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.03241107328431614-1")>
【INFO】-【2020-12-25 10:52:02】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:52:02】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.03241107328431614-2")>
【INFO】-【2020-12-25 10:52:03】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:52:04】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.03241107328431614-3")>
【INFO】-【2020-12-25 10:52:08】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm972H'
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:52:08】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:52:08】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm972H', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:52:08】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm972H', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->互联网电视变更牌照', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:52:08】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:52:08】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.29801245042769-1")>
【INFO】-【2020-12-25 10:52:08】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:52:09】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.7601640142759893-1")>
【INFO】-【2020-12-25 10:52:11】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:52:11】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.7601640142759893-2")>
【INFO】-【2020-12-25 10:52:13】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:52:13】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.7601640142759893-3")>
【INFO】-【2020-12-25 10:52:17】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:52:17】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:52:17】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.7601640142759893-4")>
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm972H']，value值->
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.7601640142759893-5")>
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm972H']，value值->
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.7601640142759893-5")>
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm972H']，value值->
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.7601640142759893-5")>
【INFO】-【2020-12-25 10:52:19】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 后台管理 > 互联网电视变更牌照
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.person.broadband.InteractiveTVChange&listener=init&FLAG=0')]，value值->
【INFO】-【2020-12-25 10:52:19】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.29801245042769-2")>
【INFO】-【2020-12-25 10:52:20】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="f73070c03d1a519eac15dee4fd79f233", element="0.29801245042769-2")>
【INFO】-【2020-12-25 10:52:21】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm972H
【INFO】-【2020-12-25 10:52:21】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:52:26】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:52:36】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:52:36】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->后台管理->宽带端口解绑
【INFO】-【2020-12-25 10:52:36】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9734
【INFO】-【2020-12-25 10:52:36】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind
【INFO】-【2020-12-25 10:52:36】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:52:36】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:52:38】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:52:38】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.7128069335962619-1")>
【INFO】-【2020-12-25 10:52:38】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:52:38】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.7128069335962619-2")>
【INFO】-【2020-12-25 10:52:39】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:52:39】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.7128069335962619-3")>
【INFO】-【2020-12-25 10:52:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9734'
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:52:46】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:52:46】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9734', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:52:46】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9734', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带端口解绑', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:52:46】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:52:46】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.17316322954513308-1")>
【INFO】-【2020-12-25 10:52:46】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:52:47】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.8451770307590967-1")>
【INFO】-【2020-12-25 10:52:49】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:52:49】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.8451770307590967-2")>
【INFO】-【2020-12-25 10:52:51】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:52:51】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.8451770307590967-3")>
【INFO】-【2020-12-25 10:52:54】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:52:54】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:52:54】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.8451770307590967-4")>
【INFO】-【2020-12-25 10:52:56】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9734']，value值->
【INFO】-【2020-12-25 10:52:56】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.8451770307590967-5")>
【INFO】-【2020-12-25 10:52:56】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9734']，value值->
【INFO】-【2020-12-25 10:52:56】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.8451770307590967-5")>
【INFO】-【2020-12-25 10:52:57】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9734']，value值->
【INFO】-【2020-12-25 10:52:57】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.8451770307590967-5")>
【INFO】-【2020-12-25 10:52:57】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 后台管理 > 宽带端口解绑
【INFO】-【2020-12-25 10:52:57】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.person.broadband.BroadBandUnBind')]，value值->
【INFO】-【2020-12-25 10:52:57】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.17316322954513308-2")>
【INFO】-【2020-12-25 10:52:57】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="2909ecf5acdc389c22c878cdcc49c1a0", element="0.17316322954513308-2")>
【INFO】-【2020-12-25 10:52:58】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9734
【INFO】-【2020-12-25 10:52:58】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:53:03】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:53:12】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:53:12】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->宽带业务->后台管理->宽带卡单重新派单
【INFO】-【2020-12-25 10:53:12】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9775
【INFO】-【2020-12-25 10:53:12】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage
【INFO】-【2020-12-25 10:53:12】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:53:12】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:53:16】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:53:16】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.47460942342136114-1")>
【INFO】-【2020-12-25 10:53:21】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:53:21】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.47460942342136114-2")>
【INFO】-【2020-12-25 10:53:29】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:53:29】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.47460942342136114-3")>
【INFO】-【2020-12-25 10:53:33】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9775'
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:53:33】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:53:33】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9775', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm9700', 'MENU_PATH': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:53:33】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9775', 'menu_cata': 'crm991A', 'parent_func_id': 'crm9700', 'menu_path': '家庭业务->宽带业务->后台管理->宽带卡单重新派单', 'dll_path': '/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:53:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:53:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.31374048091876183-1")>
【INFO】-【2020-12-25 10:53:33】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:53:33】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.38764480680340374-1")>
【INFO】-【2020-12-25 10:53:35】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:53:35】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.38764480680340374-2")>
【INFO】-【2020-12-25 10:53:37】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:53:37】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.38764480680340374-3")>
【INFO】-【2020-12-25 10:53:40】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm9700
【INFO】-【2020-12-25 10:53:40】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9700']，value值->
【INFO】-【2020-12-25 10:53:40】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.38764480680340374-4")>
【INFO】-【2020-12-25 10:53:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9775']，value值->
【INFO】-【2020-12-25 10:53:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.38764480680340374-5")>
【INFO】-【2020-12-25 10:53:42】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9775']，value值->
【INFO】-【2020-12-25 10:53:42】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.38764480680340374-5")>
【INFO】-【2020-12-25 10:53:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9775']，value值->
【INFO】-【2020-12-25 10:53:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.38764480680340374-5")>
【INFO】-【2020-12-25 10:53:43】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 宽带业务 > 后台管理 > 宽带卡单重新派单
【INFO】-【2020-12-25 10:53:43】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.person.broadband.BroadBandReSend&listener=initPage')]，value值->
【INFO】-【2020-12-25 10:53:43】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.31374048091876183-2")>
【INFO】-【2020-12-25 10:53:43】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="616a6fae221988f271f00b5fbca3df7c", element="0.31374048091876183-2")>
【INFO】-【2020-12-25 10:53:44】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9775
【INFO】-【2020-12-25 10:53:44】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:53:49】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 10:53:59】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【52】行 >> 开始参数化......
【INFO】-【2020-12-25 10:53:59】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【57】行 >> 测试的菜单路径:家庭业务->智慧家庭->智慧家庭->腕表付费关系变更
【INFO】-【2020-12-25 10:53:59】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【58】行 >> 测试的菜单编码:crm9275
【INFO】-【2020-12-25 10:53:59】 - 【FayMenuTest】 - 【FamilyMenuSmkTest.py】 - 第【59】行 >> 测试的菜单URL:/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH
【INFO】-【2020-12-25 10:53:59】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='NGBOSS'  and  param_Code ='env.Url' ;  
              
【INFO】-【2020-12-25 10:53:59】 - 【MyDBOper】 - 【SysPara.py】 - 第【55】行 >> 登录参数http://10.230.81.150:8080/portal
【INFO】-【2020-12-25 10:54:00】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->STAFF_ID，value值->
【INFO】-【2020-12-25 10:54:00】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.18183012667059706-1")>
【INFO】-【2020-12-25 10:54:00】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->PASSWORD，value值->
【INFO】-【2020-12-25 10:54:00】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.18183012667059706-2")>
【INFO】-【2020-12-25 10:54:01】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->loginBtn，value值->
【INFO】-【2020-12-25 10:54:01】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.18183012667059706-3")>
【INFO】-【2020-12-25 10:54:05】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT\r\nFROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL\r\nAND  IS_LEAF = '1' AND FUNC_ID ='%s'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='%s'"}]
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT FUNC_ID,MENU_CATA,PARENT_FUNC_ID,MENU_PATH,DLL_PATH,MODULE,ISCORE,IS_LEAF,'' TEST_RESULT  FROM AUTOTEST_MENU WHERE STATE = '1' AND PROV_CODE = 'HNAN'  AND  DLL_PATH IS NOT NULL  AND  IS_LEAF = '1' AND FUNC_ID ='crm9275'
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}]
【INFO】-【2020-12-25 10:54:05】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:54:05】 - 【MainPage】 - 【mainpage.py】 - 第【92】行 >> 读取的菜单配置:{'FUNC_ID': 'crm9275', 'MENU_CATA': 'crm991A', 'PARENT_FUNC_ID': 'crm992D', 'MENU_PATH': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'DLL_PATH': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'MODULE': '家庭业务', 'ISCORE': '1', 'IS_LEAF': '1', 'TEST_RESULT': ''}
【INFO】-【2020-12-25 10:54:05】 - 【MainPage】 - 【mainpage.py】 - 第【97】行 >> 转换后菜单配置:{'func_id': 'crm9275', 'menu_cata': 'crm991A', 'parent_func_id': 'crm992D', 'menu_path': '家庭业务->智慧家庭->智慧家庭->腕表付费关系变更', 'dll_path': '/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH', 'module': '家庭业务', 'iscore': '1', 'is_leaf': '1', 'test_result': ''}
【INFO】-【2020-12-25 10:54:05】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->navframe_def，value值->
【INFO】-【2020-12-25 10:54:05】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.876884660673797-1")>
【INFO】-【2020-12-25 10:54:05】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->homeTab_tab_li_6，value值->
【INFO】-【2020-12-25 10:54:05】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.8253291921521921-1")>
【INFO】-【2020-12-25 10:54:07】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式id  元素值->menuTab_tab_li_0，value值->
【INFO】-【2020-12-25 10:54:07】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.8253291921521921-2")>
【INFO】-【2020-12-25 10:54:10】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm991A']，value值->
【INFO】-【2020-12-25 10:54:10】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.8253291921521921-3")>
【INFO】-【2020-12-25 10:54:13】 - 【MainPage】 - 【mainpage.py】 - 第【111】行 >> 菜单目录：crm992D
【INFO】-【2020-12-25 10:54:13】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm992D']，value值->
【INFO】-【2020-12-25 10:54:13】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.8253291921521921-4")>
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9275']，value值->
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.8253291921521921-5")>
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9275']，value值->
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.8253291921521921-5")>
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//li[@menuid='crm9275']，value值->
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.8253291921521921-5")>
【INFO】-【2020-12-25 10:54:15】 - 【MainPage】 - 【mainpage.py】 - 第【126】行 >> 进入菜单路径 :家庭业务 > 智慧家庭 > 智慧家庭 > 腕表付费关系变更
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//iframe[contains(@src,'/web-order/order?service=page/order.page.pc.person.changepayrelation.PayRelaNorChg&listener=init&PAYTYPE=KIDSWATCH')]，value值->
【INFO】-【2020-12-25 10:54:15】 - 【base】 - 【base.py】 - 第【83】行 >> 定位到该元素<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.876884660673797-2")>
【INFO】-【2020-12-25 10:54:15】 - 【MainPage】 - 【mainpage.py】 - 第【142】行 >> 进入菜单Iframe:<selenium.webdriver.remote.webelement.WebElement (session="06c17a4da5bd834a65effdd6838558ca", element="0.876884660673797-2")>
【INFO】-【2020-12-25 10:54:16】 - 【MainPage】 - 【mainpage.py】 - 第【114】行 >> 菜单ID：crm9275
【INFO】-【2020-12-25 10:54:17】 - 【base】 - 【base.py】 - 第【79】行 >> 正在定位元素信息：定位方式xpath  元素值->//div[contains(@class,"c_msg c_msg-full") and not(contains(@style,"display: none"))]，value值->
【INFO】-【2020-12-25 10:54:22】 - 【PageAssert】 - 【PageCheck.py】 - 第【140】行 >> ======WadeMessageBox页面返回=============没有弹出WadeMessage提示,校验通过
【INFO】-【2020-12-25 16:58:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 16:58:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 16:58:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 16:59:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 16:59:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 16:59:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 16:59:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '1' AND ATTR_CODE ='2' AND STATE ='1'
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[]
【INFO】-【2020-12-25 16:59:00】 - 【DataMap】 - 【DataMap.py】 - 第【191】行 >> 查询结果为空
【INFO】-【2020-12-25 17:00:07】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:00:07】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:00:07】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:00:07】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:00:07】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:01:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:01:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:01:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:01:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:01:02】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:02:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:02:17】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:02:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:02:47】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:03:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:03:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:03:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:03:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:03:01】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:05:10】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:10】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:10】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:10】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:05:10】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:05:29】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:29】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:29】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:05:40】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:14:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:14:20】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:14:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:14:52】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:15:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:15:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:15:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:15:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:15:20】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:16:33】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:33】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:33】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:33】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:16:33】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:16:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:16:42】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:18:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:18:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:18:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:18:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:18:52】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:19:05】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:05】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:05】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:05】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:19:05】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:19:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:19:37】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:20:55】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:20:55】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:20:55】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:20:55】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:20:55】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:22:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:22:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:22:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:22:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:22:48】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:25:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:25:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:25:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:25:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:25:46】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:26:31】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:26:31】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:26:31】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:26:31】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:26:31】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:28:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:28:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:28:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:28:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'func' AND ATTR_CODE ='GetFunc' AND STATE ='1'
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:28:39】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:[{'ID': '202001', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成大写', 'ATTR_VALUE': 'Common.function@convert_to_diclistUpper'}, {'ID': '202002', 'ID_TYPE': 'func', 'ATTR_CODE': 'GetFunc', 'ATTR_NAME': '字典列表key转换成小写', 'ATTR_VALUE': 'Common.function@convert_to_diclistLower'}]
【INFO】-【2020-12-25 17:33:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:33:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:33:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:33:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm42@TF_F_USER@SEL_BY_SERAILNUM'}]
【INFO】-【2020-12-25 17:33:00】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm42@TF_F_USER@SEL_BY_SERAILNUM'}
【INFO】-【2020-12-25 17:49:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:49:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:49:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:49:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 17:49:18】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 17:55:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:55:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:55:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 17:56:46】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 17:57:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 17:57:11】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 17:57:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[]
【INFO】-【2020-12-25 17:57:21】 - 【DataMap】 - 【DataMap.py】 - 第【191】行 >> 查询结果为空
【INFO】-【2020-12-25 17:57:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:57:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:06】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:06】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:06】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 17:58:24】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:31:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:31:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:31:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:31:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 19:31:19】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:31:19】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:TF_F_USER@SEL_UserBySerialNum
【INFO】-【2020-12-25 19:32:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:32:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:32:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:32:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 19:32:44】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:32:44】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:TF_F_USER@SEL_UserBySerialNum
【INFO】-【2020-12-25 19:34:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:34:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:34:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:34:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:34:54】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 19:34:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}, {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}, {'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 19:34:54】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 19:34:54】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm1' ;  
              
【INFO】-【2020-12-25 19:34:54】 - 【MyDBOper】 - 【SysPara.py】 - 第【38】行 >> 查询结果为空
【INFO】-【2020-12-25 19:42:59】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:42:59】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:42:59】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:42:59】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:42:59】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 19:42:59】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}, {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}, {'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 19:42:59】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 19:42:59】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm1' ;  
              
【INFO】-【2020-12-25 19:42:59】 - 【MyDBOper】 - 【SysPara.py】 - 第【38】行 >> 查询结果为空
【INFO】-【2020-12-25 19:43:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:43:23】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 19:43:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}, {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}, {'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 19:43:23】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 19:43:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm1' ;  
              
【INFO】-【2020-12-25 19:43:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【38】行 >> 查询结果为空
【INFO】-【2020-12-25 19:43:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 19:43:49】 - 【DataMap】 - 【DataMap.py】 - 第【193】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:43:49】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 19:43:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【30】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}, {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【38】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【46】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm1', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}, {'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 19:43:52】 - 【DataMap】 - 【DataMap.py】 - 第【180】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 19:43:52】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm1' ;  
              
【INFO】-【2020-12-25 19:43:52】 - 【MyDBOper】 - 【SysPara.py】 - 第【38】行 >> 查询结果为空
【INFO】-【2020-12-25 19:51:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:51:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【33】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT T.SCENE_NAME,T.SCENE_CODE,T.PARAMS,T.EXPECT_RESULT FROM AUTOTEST_CASE T', 'EXPR_COND': "SCENE_CODE='%s'", 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【40】行 >> {'SQL_STMT': 'SELECT T.SCENE_NAME,T.SCENE_CODE,T.PARAMS,T.EXPECT_RESULT FROM AUTOTEST_CASE T', 'EXPR_COND': "SCENE_CODE='%s'", 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【41】行 >> SCENE_CODE='%s'
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【49】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT T.SCENE_NAME,T.SCENE_CODE,T.PARAMS,T.EXPECT_RESULT FROM AUTOTEST_CASE T WHERE SCENE_CODE='%s'"}
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【51】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT T.SCENE_NAME,T.SCENE_CODE,T.PARAMS,T.EXPECT_RESULT FROM AUTOTEST_CASE T WHERE SCENE_CODE='%s'"}]
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【183】行 >> ======查询sql语句:SELECT T.SCENE_NAME,T.SCENE_CODE,T.PARAMS,T.EXPECT_RESULT FROM AUTOTEST_CASE T WHERE SCENE_CODE='ChgMainProduct'
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【192】行 >> ======查询sql语句数据库返回结果:[{'SCENE_NAME': '个人业务受理-产品变更110-变更主产品', 'SCENE_CODE': 'ChgMainProduct', 'PARAMS': "{'accessNum':'18309718709','productId':'18012979','elementList':[]}", 'EXPECT_RESULT': None}]
【INFO】-【2020-12-25 19:51:25】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:{'SCENE_NAME': '个人业务受理-产品变更110-变更主产品', 'SCENE_CODE': 'ChgMainProduct', 'PARAMS': "{'accessNum':'18309718709','productId':'18012979','elementList':[]}", 'EXPECT_RESULT': None}
【INFO】-【2020-12-25 19:51:31】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:51:31】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:51:31】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:51:34】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:51:34】 - 【DataCheck】 - 【DataCheck.py】 - 第【98】行 >> select intf_id,trade_id,trade_type_code from tf_b_trade where order_id = 3120121538644203
                          union  all 
                          select intf_id,trade_id,trade_type_code from tf_b_trade_2020 where order_id = 3120121538644203
                        
【INFO】-【2020-12-25 19:51:34】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:35】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:35】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:35】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【DataCheck.py】 - 第【118】行 >> 已获取的所有子表:[{'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'TRADE_ID': 3120121587923058, 'TRADE_TYPE_CODE': 3564}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'TRADE_ID': 3120121587923059, 'TRADE_TYPE_CODE': 3564}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC', 'TRADE_ID': 3120121587923060, 'TRADE_TYPE_CODE': 110}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_USER,TF_B_TRADE_ACCOUNT,TF_B_TRADE_ACCOUNT_ACCTDAY,TF_B_TRADE_PAYRELATION,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC,TF_B_TRADE_SVCSTATE,TF_B_TRADE_BROADBAND_ACT,TF_B_TRADE_BROADBAND,TF_B_TRADE_RES,TF_B_TRADE_OTHER,TF_B_TRADE_RATE', 'TRADE_ID': 3120121587923061, 'TRADE_TYPE_CODE': 1002}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SALE_ACTIVE,TF_B_TRADE_DISCNT', 'TRADE_ID': 3120121587923062, 'TRADE_TYPE_CODE': 240}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SCENE', 'TRADE_ID': 3120121587923063, 'TRADE_TYPE_CODE': 996}],返回6条数据
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【DataCheck.py】 - 第【131】行 >> 返回的子台帐列表：[{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_RELATION'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_RELATION'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_PRODUCT'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_SVC'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_USER'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT_ACCTDAY'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PAYRELATION'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PRODUCT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVC'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVCSTATE'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND_ACT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RES'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_OTHER'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RATE'}, {'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_SALE_ACTIVE'}, {'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE_SCENE'}]
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923058', 'TF_B_TRADE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923058', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_RELATION'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923058', 'TF_B_TRADE_RELATION']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923059', 'TF_B_TRADE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923059', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_RELATION'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923059', 'TF_B_TRADE_RELATION']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_PRODUCT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE_PRODUCT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_SVC'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE_SVC']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_USER'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_USER']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_ACCOUNT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT_ACCTDAY'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_ACCOUNT_ACCTDAY']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PAYRELATION'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_PAYRELATION']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PRODUCT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_PRODUCT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVC'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_SVC']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVCSTATE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_SVCSTATE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND_ACT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_BROADBAND_ACT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_BROADBAND']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RES'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_RES']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_OTHER'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_OTHER']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RATE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_RATE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['240', '3120121538644203', '3120121587923062', 'TF_B_TRADE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_SALE_ACTIVE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['240', '3120121538644203', '3120121587923062', 'TF_B_TRADE_SALE_ACTIVE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['240', '3120121538644203', '3120121587923062', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['996', '3120121538644203', '3120121587923063', 'TF_B_TRADE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE_SCENE'}
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['996', '3120121538644203', '3120121587923063', 'TF_B_TRADE_SCENE']
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 19:51:35】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 19:51:35】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:35】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:35】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:35】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:35】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923058, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 3564, 'PRIORITY': 260, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': '0', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99913849, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': '亲情权益网主卡', 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': '新增主卡：13467658', 'RSRV_STR10': '909，主卡优惠：亲情主卡', 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923058', '12', None, '3120121538644203', None, None, None, '3564', '260', '0', '0', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99913849', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', None, None, None, None, None, '亲情权益网主卡', None, None, '新增主卡：13467658', '909，主卡优惠：亲情主卡', None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:36】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:36】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923058, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': 3120121500035703, 'PACKAGE_ID': 99966069, 'PRODUCT_ID': 99915597, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664914, 'DISCNT_CODE': 99664914, 'SPEC_TAG': '2', 'RELATION_TYPE_CODE': '84', 'INST_ID': 3120121500453584, 'CAMPN_ID': 0, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923058, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923058', '12', '3105122612640081', '3120121500035703', '99966069', '99915597', 'D', '130099664914', '99664914', '2', '84', '3120121500453584', '0', None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923058', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 19:51:36】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 19:51:36】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:37】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923058, 'ACCEPT_MONTH': 12, 'USER_ID_A': 3120121500035703, 'SERIAL_NUMBER_A': '88843467658909', 'USER_ID_B': 3105122612640081, 'SERIAL_NUMBER_B': '13467658909', 'RELATION_TYPE_CODE': '84', 'ROLE_TYPE_CODE': None, 'ROLE_CODE_A': '0', 'ROLE_CODE_B': '1', 'ORDERNO': 0, 'SHORT_CODE': '520', 'INST_ID': 3120121500453585, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': '0731', 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923058}
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923058', '12', '3120121500035703', '88843467658909', '3105122612640081', '13467658909', '84', None, '0', '1', '0', '520', '3120121500453585', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, '0731', None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923058']
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 19:51:37】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:37】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:37】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923059, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 3564, 'PRIORITY': 260, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3116090617945674, 'CUST_NAME': '485703324991688121', 'USER_ID': 3106022702310071, 'ACCT_ID': 3106031400475075, 'SERIAL_NUMBER': '13407310373', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31L', 'PRODUCT_ID': 31799360, 'BRAND_CODE': 'G018', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': '亲情权益网副卡', 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': '新增副卡：13407310', 'RSRV_STR10': '373，副卡优惠：亲情成员', 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923059', '12', None, '3120121538644203', None, None, None, '3564', '260', '0', 'Y', '0', '0', '3116090617945674', '485703324991688121', '3106022702310071', '3106031400475075', '13407310373', '00', '0731', 'A31L', '31799360', 'G018', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', None, None, None, None, None, '亲情权益网副卡', None, None, '新增副卡：13407310', '373，副卡优惠：亲情成员', None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 19:51:37】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:37】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:38】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:38】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:38】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923059, 'ACCEPT_MONTH': 12, 'USER_ID': 3106022702310071, 'USER_ID_A': 3120121500035703, 'PACKAGE_ID': 99966069, 'PRODUCT_ID': 99915597, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664915, 'DISCNT_CODE': 99664915, 'SPEC_TAG': '2', 'RELATION_TYPE_CODE': '84', 'INST_ID': 3120121500453587, 'CAMPN_ID': 0, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923059, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:38】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923059', '12', '3106022702310071', '3120121500035703', '99966069', '99915597', 'D', '130099664915', '99664915', '2', '84', '3120121500453587', '0', None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923059', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:38】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 19:51:38】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 19:51:38】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 19:51:38】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:38】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:38】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923059, 'ACCEPT_MONTH': 12, 'USER_ID_A': 3120121500035703, 'SERIAL_NUMBER_A': '88843467658909', 'USER_ID_B': 3106022702310071, 'SERIAL_NUMBER_B': '13407310373', 'RELATION_TYPE_CODE': '84', 'ROLE_TYPE_CODE': None, 'ROLE_CODE_A': '0', 'ROLE_CODE_B': '2', 'ORDERNO': 0, 'SHORT_CODE': None, 'INST_ID': 3120121500453588, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': '0731', 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923059}
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923059', '12', '3120121500035703', '88843467658909', '3106022702310071', '13407310373', '84', None, '0', '2', '0', None, '3120121500453588', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, '0731', None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923059']
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 19:51:39】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:39】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 110, 'PRIORITY': 320, 'SUBSCRIBE_TYPE': 1, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99916037, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '1', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': 'G045', 'RSRV_STR2': '99916037', 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', None, '3120121538644203', None, None, None, '110', '320', '1', 'Y', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99916037', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '1', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', 'G045', '99916037', None, None, None, None, None, None, None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:39】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 19:51:39】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:39】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:40】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PRODUCT_MODE': '00', 'BRAND_CODE': 'G045', 'OLD_PRODUCT_ID': 99913849, 'OLD_BRAND_CODE': 'G045', 'INST_ID': 3120121500453589, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'MAIN_TAG': '1', 'OFFER_ID': 110099916037, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'P'}
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '00', 'G045', '99913849', 'G045', '3120121500453589', None, '2021-01-01 00:00:00', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, '1', '110099916037', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'P']
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PRODUCT_MODE': '00', 'BRAND_CODE': 'G045', 'OLD_PRODUCT_ID': None, 'OLD_BRAND_CODE': None, 'INST_ID': 3120051238609210, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2020, 6, 1, 0, 0), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '1', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'MAIN_TAG': '1', 'OFFER_ID': 110099913849, 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'DONE_CODE': 3120121587923060, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'P'}
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99913849', '00', 'G045', None, None, '3120051238609210', None, '2020-06-01 00:00:00', '2020-12-31 23:59:59', '1', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, '1', '110099913849', None, None, None, '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'P']
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:40】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:40】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:40】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': 99965321, 'PRODUCT_ID': 99916037, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664885, 'DISCNT_CODE': 99664885, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453590, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99965321', '99916037', 'D', '130099664885', '99664885', '0', None, '3120121500453590', None, None, None, '2021-01-01 00:00:00', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': 99941020, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099662596, 'DISCNT_CODE': 99662596, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120051239923973, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 5, 12, 10, 29, 23), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '1', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99941020', '99913849', 'D', '130099662596', '99662596', '0', None, '3120051239923973', None, None, None, '2020-05-12 10:29:23', '2020-12-31 23:59:59', '1', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': 99963710, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664808, 'DISCNT_CODE': 99664808, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120051238609211, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 6, 1, 0, 0), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '1', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99963710', '99913849', 'D', '130099664808', '99664808', '0', None, '3120051238609211', None, None, None, '2020-06-01 00:00:00', '2020-12-31 23:59:59', '1', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 19:51:40】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SVC
【INFO】-【2020-12-25 19:51:40】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:41】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SVC
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': -1, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000000, 'SERVICE_ID': 0, 'MAIN_TAG': '1', 'INST_ID': 3109040467478776, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '-1', 'S', '120000000000', '0', '1', '3109040467478776', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000001, 'SERVICE_ID': 1, 'MAIN_TAG': '0', 'INST_ID': 3109040445841257, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000001', '1', '0', '3109040445841257', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000002, 'SERVICE_ID': 2, 'MAIN_TAG': '0', 'INST_ID': 3109040452276697, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000002', '2', '0', '3109040452276697', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000005, 'SERVICE_ID': 5, 'MAIN_TAG': '0', 'INST_ID': 3109040447377930, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000005', '5', '0', '3109040447377930', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000014, 'SERVICE_ID': 14, 'MAIN_TAG': '0', 'INST_ID': 3109040447576602, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000014', '14', '0', '3109040447576602', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000018, 'SERVICE_ID': 18, 'MAIN_TAG': '0', 'INST_ID': 3109040457577901, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000018', '18', '0', '3109040457577901', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000023, 'SERVICE_ID': 23, 'MAIN_TAG': '0', 'INST_ID': 3109040449808223, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000023', '23', '0', '3109040449808223', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000076, 'SERVICE_ID': 76, 'MAIN_TAG': '0', 'INST_ID': 3109040472676465, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000076', '76', '0', '3109040472676465', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': -1, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000088, 'SERVICE_ID': 88, 'MAIN_TAG': '0', 'INST_ID': 3114072564968701, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2014, 7, 25, 11, 13, 50), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': '换USIM卡自助开通4G上网服务', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '-1', 'S', '120000000088', '88', '0', '3114072564968701', None, None, None, '2014-07-25 11:13:50', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', '换USIM卡自助开通4G上网服务', None, None, None, None, None, None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000093, 'SERVICE_ID': 93, 'MAIN_TAG': '0', 'INST_ID': 3109040465046680, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000093', '93', '0', '3109040465046680', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000094, 'SERVICE_ID': 94, 'MAIN_TAG': '0', 'INST_ID': 3109040444820702, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000094', '94', '0', '3109040444820702', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000095, 'SERVICE_ID': 95, 'MAIN_TAG': '0', 'INST_ID': 3109040471566911, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000095', '95', '0', '3109040471566911', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000096, 'SERVICE_ID': 96, 'MAIN_TAG': '0', 'INST_ID': 3109040451744005, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000096', '96', '0', '3109040451744005', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000098, 'SERVICE_ID': 98, 'MAIN_TAG': '0', 'INST_ID': 3114111587188288, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2014, 11, 15, 2, 36, 38), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000098', '98', '0', '3114111587188288', None, None, None, '2014-11-15 02:36:38', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000099, 'SERVICE_ID': 99, 'MAIN_TAG': '0', 'INST_ID': 3114111587188289, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2014, 11, 15, 2, 36, 38), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000099', '99', '0', '3114111587188289', None, None, None, '2014-11-15 02:36:38', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000138, 'SERVICE_ID': 138, 'MAIN_TAG': '0', 'INST_ID': 3111102554153914, 'CAMPN_ID': 0, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2011, 10, 25, 16, 6, 41), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 0, 'RSRV_NUM3': 0, 'RSRV_NUM4': 0, 'RSRV_NUM5': 0, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': '1', 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000138', '138', '0', '3111102554153914', '0', None, None, '2011-10-25 16:06:41', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, '0', '0', '0', '0', '0', None, None, '31799501', '31956843', None, None, None, None, None, None, '1', None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000190, 'SERVICE_ID': 190, 'MAIN_TAG': '0', 'INST_ID': 3117041560586721, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2017, 4, 15, 3, 31, 32), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000190', '190', '0', '3117041560586721', None, None, None, '2017-04-15 03:31:32', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000003000, 'SERVICE_ID': 3000, 'MAIN_TAG': '0', 'INST_ID': 3109040465629356, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2009, 4, 4, 0, 0), 'END_DATE': datetime.datetime(2050, 11, 19, 0, 1, 9), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': '统一开通', 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000003000', '3000', '0', '3109040465629356', None, None, None, '2009-04-04 00:00:00', '2050-11-19 00:01:09', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, '统一开通', None, None, None, None, None]
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:41】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 19:51:41】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:41】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 1002, 'PRIORITY': 320, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'F', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3120121500008122, 'CUST_NAME': '4**137963985946206', 'USER_ID': 3120121500035704, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '731X17658102', 'NET_TYPE_CODE': '04', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A311', 'PRODUCT_ID': 99913849, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': '13467658909', 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_USER,TF_B_TRADE_ACCOUNT,TF_B_TRADE_ACCOUNT_ACCTDAY,TF_B_TRADE_PAYRELATION,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC,TF_B_TRADE_SVCSTATE,TF_B_TRADE_BROADBAND_ACT,TF_B_TRADE_BROADBAND,TF_B_TRADE_RES,TF_B_TRADE_OTHER,TF_B_TRADE_RATE', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '1', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 25, 8, 0), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '1', 'RSRV_STR1': '2020-12-25 08:00:00', 'RSRV_STR2': '149394', 'RSRV_STR3': '新和家庭2019版100M宽带标准资费', 'RSRV_STR4': '智慧平台测试工号', 'RSRV_STR5': '系统维护', 'RSRV_STR6': '11111111111', 'RSRV_STR7': '0', 'RSRV_STR8': '0|0|0', 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', None, '3120121538644203', None, None, None, '1002', '320', '0', 'F', '0', '0', '3120121500008122', '4**137963985946206', '3120121500035704', '3105122610273482', '731X17658102', '04', '0731', 'A311', '99913849', 'G045', None, None, None, '13467658909', None, None, 'TF_B_TRADE,TF_B_TRADE_USER,TF_B_TRADE_ACCOUNT,TF_B_TRADE_ACCOUNT_ACCTDAY,TF_B_TRADE_PAYRELATION,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC,TF_B_TRADE_SVCSTATE,TF_B_TRADE_BROADBAND_ACT,TF_B_TRADE_BROADBAND,TF_B_TRADE_RES,TF_B_TRADE_OTHER,TF_B_TRADE_RATE', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '1', None, '2020-12-25 08:00:00', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '1', '2020-12-25 08:00:00', '149394', '新和家庭2019版100M宽带标准资费', '智慧平台测试工号', '系统维护', '11111111111', '0', '0|0|0', None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_USER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_USER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_USER
【INFO】-【2020-12-25 19:51:42】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:42】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_USER
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'CUST_ID': 3120121500008122, 'USECUST_ID': 3120121500008122, 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A311', 'CITY_CODE_A': '0   ', 'USER_PASSWD': None, 'USER_DIFF_CODE': '00', 'USER_TYPE_CODE': 'W', 'USER_TAG_SET': None, 'USER_STATE_CODESET': '0', 'NET_TYPE_CODE': '04', 'SERIAL_NUMBER': '731X17658102', 'CONTRACT_ID': '0', 'ACCT_TAG': '0', 'PREPAY_TAG': '1', 'MPUTE_MONTH_FEE': '0', 'MPUTE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'FIRST_CALL_TIME': None, 'LAST_STOP_TIME': None, 'CHANGEUSER_DATE': None, 'IN_NET_MODE': None, 'IN_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'IN_STAFF_ID': 'ACHENLY0', 'IN_DEPART_ID': '00000', 'OPEN_MODE': '0', 'OPEN_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'OPEN_STAFF_ID': 'ACHENLY0', 'OPEN_DEPART_ID': '00000', 'DEVELOP_STAFF_ID': 'ACHENLY0', 'DEVELOP_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'DEVELOP_DEPART_ID': '23271', 'DEVELOP_CITY_CODE': 'A311', 'DEVELOP_EPARCHY_CODE': '0731', 'DEVELOP_NO': None, 'ASSURE_CUST_ID': None, 'ASSURE_TYPE_CODE': None, 'ASSURE_DATE': None, 'REMOVE_TAG': '0', 'PRE_DESTROY_TIME': None, 'DESTROY_TIME': None, 'REMOVE_EPARCHY_CODE': None, 'REMOVE_CITY_CODE': None, 'REMOVE_DEPART_ID': None, 'REMOVE_REASON_CODE': None, 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '宽带用户创建', 'IS4G_FLAG': None, 'DY_TAG': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '3120121500008122', '3120121500008122', '0731', 'A311', '0   ', None, '00', 'W', None, '0', '04', '731X17658102', '0', '0', '1', '0', '2020-12-15 12:04:40', None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'ACHENLY0', '2020-12-15 12:04:40', '23271', 'A311', '0731', None, None, None, None, '0', None, None, None, None, None, None, '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '宽带用户创建', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_ACCOUNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_ACCOUNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:42】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_ACCOUNT
【INFO】-【2020-12-25 19:51:42】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:43】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:43】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_ACCOUNT
【INFO】-【2020-12-25 19:51:43】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'ACCT_ID': 3105122610273482, 'CUST_ID': 3120121500008122, 'PAY_NAME': '389688009681300302', 'PAY_MODE_CODE': '0', 'ACCT_DIFF_CODE': '0', 'ACCT_PASSWD': None, 'ACCT_TAG': None, 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'BANK_CODE': '788176542566224700', 'BANK_ACCT_NO': '586774360921030349', 'SCORE_VALUE': 0, 'CREDIT_CLASS_ID': 0, 'BASIC_CREDIT_VALUE': 1, 'CREDIT_VALUE': 0, 'DEBUTY_USER_ID': 3120121500035704, 'DEBUTY_CODE': None, 'CONTRACT_NO': None, 'DEPOSIT_PRIOR_RULE_ID': 0, 'ITEM_PRIOR_RULE_ID': 0, 'OPEN_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'REMOVE_TAG': '0', 'REMOVE_DATE': None, 'MODIFY_TAG': '0', 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'REMARK': 'NG割接导入', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '20060103000531@0@0', 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:43】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3105122610273482', '3120121500008122', '389688009681300302', '0', '0', None, None, '00', '0731', 'A31H', '788176542566224700', '586774360921030349', '0', '0', '1', '0', '3120121500035704', None, None, '0', '0', '2005-12-26 12:48:27', '0', None, '0', 'ACHENLY0', '00000', '2020-12-15 12:04:40', 'NG割接导入', None, None, '20060103000531@0@0', None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:43】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_ACCOUNT_ACCTDAY_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:43】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_ACCOUNT_ACCTDAY_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:43】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_ACCOUNT_ACCTDAY
【INFO】-【2020-12-25 19:51:43】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:43】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_ACCOUNT_ACCTDAY
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'ACCT_ID': 3105122610273482, 'ACCT_DAY': 1, 'CHG_TYPE': '1', 'CHG_MODE': '0', 'CHG_DATE': datetime.datetime(2020, 12, 15, 0, 0), 'FIRST_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'INST_ID': 3120121500453591, 'START_DATE': datetime.datetime(2020, 12, 15, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_TAG1': '1', 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3105122610273482', '1', '1', '0', '2020-12-15 00:00:00', '2021-01-01 00:00:00', '3120121500453591', '2020-12-15 00:00:00', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, None, None, None, '1', None, None]
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_PAYRELATION_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_PAYRELATION_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_PAYRELATION
【INFO】-【2020-12-25 19:51:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_PAYRELATION
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'ACCT_ID': 3105122610273482, 'PAYITEM_CODE': -1, 'ACCT_PRIORITY': 0, 'USER_PRIORITY': 0, 'ADDUP_MONTHS': None, 'ADDUP_METHOD': None, 'BIND_TYPE': '1', 'ACT_TAG': '1', 'DEFAULT_TAG': '1', 'LIMIT_TYPE': '0', 'LIMIT_VALUE': 0, 'COMPLEMENT_TAG': '0', 'INST_ID': 3120121500453592, 'START_CYCLE_ID': 20201215, 'END_CYCLE_ID': 20501231, 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '3105122610273482', '-1', '0', '0', None, None, '1', '1', '1', '0', '0', '0', '3120121500453592', '20201215', '20501231', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'ACCT_ID': 3105122610273482, 'PAYITEM_CODE': -1, 'ACCT_PRIORITY': 0, 'USER_PRIORITY': 0, 'ADDUP_MONTHS': None, 'ADDUP_METHOD': None, 'BIND_TYPE': '1', 'ACT_TAG': '1', 'DEFAULT_TAG': '1', 'LIMIT_TYPE': '0', 'LIMIT_VALUE': 0, 'COMPLEMENT_TAG': '0', 'INST_ID': 3120121500453606, 'START_CYCLE_ID': 20201215, 'END_CYCLE_ID': 20501231, 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '3105122610273482', '-1', '0', '0', None, None, '1', '1', '1', '0', '0', '0', '3120121500453606', '20201215', '20501231', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:44】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 19:51:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:44】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:44】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PRODUCT_MODE': '00', 'BRAND_CODE': 'G045', 'OLD_PRODUCT_ID': None, 'OLD_BRAND_CODE': None, 'INST_ID': 3120121500453593, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'MAIN_TAG': '1', 'OFFER_ID': 110099913849, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'P'}
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '99913849', '00', 'G045', None, None, '3120121500453593', None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, '1', '110099913849', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'P']
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:45】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:45】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:45】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PACKAGE_ID': 51700050, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099000099, 'DISCNT_CODE': 99000099, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453594, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '51700050', '99913849', 'D', '130099000099', '99000099', '0', None, '3120121500453594', None, None, None, '2020-12-15 12:04:40', '2020-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PACKAGE_ID': 51700050, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130020181800, 'DISCNT_CODE': 20181800, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453595, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '51700050', '99913849', 'D', '130020181800', '20181800', '0', None, '3120121500453595', None, None, None, '2020-12-15 12:04:40', '2050-12-31 00:00:00', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PACKAGE_ID': 51700050, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130020181810, 'DISCNT_CODE': 20181810, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453596, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '51700050', '99913849', 'D', '130020181810', '20181810', '0', None, '3120121500453596', None, None, None, '2020-12-15 12:04:40', '2050-12-31 00:00:00', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:45】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SVC
【INFO】-【2020-12-25 19:51:45】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:46】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SVC
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PACKAGE_ID': 51700050, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000618, 'SERVICE_ID': 618, 'MAIN_TAG': '0', 'INST_ID': 3120121500453597, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '99913849', '51700050', 'S', '120000000618', '618', '0', '3120121500453597', None, None, None, '2021-01-01 00:00:00', '2050-12-31 00:00:00', '0', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PACKAGE_ID': -1, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000000, 'SERVICE_ID': 0, 'MAIN_TAG': '1', 'INST_ID': 3120121500453599, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '99913849', '-1', 'S', '120000000000', '0', '1', '3120121500453599', None, None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SVCSTATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SVCSTATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:46】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SVCSTATE
【INFO】-【2020-12-25 19:51:46】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:46】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:46】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SVCSTATE
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'INST_ID': 3120121500453598, 'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'SERVICE_ID': 618, 'MAIN_TAG': '0', 'STATE_CODE': '0', 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121500453598', '3120121587923061', '12', '3120121500035704', '618', '0', '0', '2021-01-01 00:00:00', '2050-12-31 00:00:00', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'INST_ID': 3120121500453600, 'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'SERVICE_ID': 0, 'MAIN_TAG': '1', 'STATE_CODE': '0', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121500453600', '3120121587923061', '12', '3120121500035704', '0', '1', '0', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_BROADBAND_ACT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_BROADBAND_ACT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_BROADBAND_ACT
【INFO】-【2020-12-25 19:51:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_BROADBAND_ACT
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'MODIFY_TAG': '0', 'INST_ID': 3120121500453601, 'PARTITION_ID': 5704, 'USER_ID': 3120121500035704, 'SERIAL_NUMBER': '13467658909', 'ACCESS_TYPE': '铁通FTTH', 'ACCESS_ACCT': '731X17658102', 'ACCESS_PWD': '>B;@:6', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'MAIN_TAG': '1', 'PRES_ISTR069': None, 'PRES_PASSWORD': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_STR1': '0', 'RSRV_NUM3': None, 'RSRV_STR2': '2050-12-31T00:00', 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR3': '999999', 'RSRV_STR4': '21', 'RSRV_STR5': '13974936964', 'RSRV_TAG1': None, 'RSRV_TAG2': '0', 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '0', '3120121500453601', '5704', '3120121500035704', '13467658909', '铁通FTTH', '731X17658102', '>B;@:6', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', '1', None, None, None, None, '0', None, '2050-12-31T00:00', None, None, '999999', '21', '13974936964', None, '0', None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_BROADBAND_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_BROADBAND_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:47】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_BROADBAND
【INFO】-【2020-12-25 19:51:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:48】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:48】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_BROADBAND
【INFO】-【2020-12-25 19:51:48】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'MODIFY_TAG': '0', 'INST_ID': 3120121500453602, 'PARTITION_ID': 5704, 'USER_ID': 3120121500035704, 'ADDR_ID': '-841342793', 'ADDR_NAME': '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号', 'ADDR_DESC': '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号【】', 'MOFFICE_ID': '0', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'IP_TYPE': None, 'PORT_TYPE': None, 'ACCT_PASSWD': None, 'PHONE': None, 'CONTACT': None, 'CONTACT_PHONE': None, 'PROVIDER_CODE': None, 'EQPT_PROVIER': None, 'SUGGEST_DATE': datetime.datetime(2020, 12, 25, 0, 0), 'OLD_ADDR_DESC': None, 'OLD_ADDR_NAME': None, 'OLD_ADDR_ID': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:48】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '0', '3120121500453602', '5704', '3120121500035704', '-841342793', '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号', '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号【】', '0', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', None, None, None, None, None, None, None, None, '2020-12-25 00:00:00', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:48】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RES_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:48】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RES_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:48】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RES
【INFO】-【2020-12-25 19:51:48】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:48】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RES
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'RES_TYPE_CODE': '6', 'RES_CODE': '-1', 'IMSI': None, 'KI': None, 'INST_ID': 3120121500453603, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '宽带用户创建', 'SIM_OPC': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '6', '-1', None, None, '3120121500453603', None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '宽带用户创建', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_OTHER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_OTHER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_OTHER
【INFO】-【2020-12-25 19:51:49】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:49】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:49】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_OTHER
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'RSRV_VALUE_CODE': 'IS_RETE_MIRABILE', 'RSRV_VALUE': None, 'PROCESS_TAG': None, 'RELATION_TRADE_ID': None, 'STAFF_ID': None, 'DEPART_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': 'HXYD-YZ-REQ-20180327-005关于在宽带新装界面填入是否挖抢异网客户的需求', 'INST_ID': 3120121500453604, 'OPER_CODE': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_NUM6': None, 'RSRV_NUM7': None, 'RSRV_NUM8': None, 'RSRV_NUM9': None, 'RSRV_NUM10': None, 'RSRV_NUM11': None, 'RSRV_NUM12': None, 'RSRV_NUM13': None, 'RSRV_NUM14': None, 'RSRV_NUM15': None, 'RSRV_NUM16': None, 'RSRV_NUM17': None, 'RSRV_NUM18': None, 'RSRV_NUM19': None, 'RSRV_NUM20': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_STR11': None, 'RSRV_STR12': None, 'RSRV_STR13': None, 'RSRV_STR14': None, 'RSRV_STR15': None, 'RSRV_STR16': None, 'RSRV_STR17': None, 'RSRV_STR18': None, 'RSRV_STR19': None, 'RSRV_STR20': None, 'RSRV_STR21': None, 'RSRV_STR22': None, 'RSRV_STR23': None, 'RSRV_STR24': None, 'RSRV_STR25': None, 'RSRV_STR26': None, 'RSRV_STR27': None, 'RSRV_STR28': None, 'RSRV_STR29': None, 'RSRV_STR30': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_DATE4': None, 'RSRV_DATE5': None, 'RSRV_DATE6': None, 'RSRV_DATE7': None, 'RSRV_DATE8': None, 'RSRV_DATE9': None, 'RSRV_DATE10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_TAG4': None, 'RSRV_TAG5': None, 'RSRV_TAG6': None, 'RSRV_TAG7': None, 'RSRV_TAG8': None, 'RSRV_TAG9': None, 'RSRV_TAG10': None}
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', 'IS_RETE_MIRABILE', None, None, None, None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'HXYD-YZ-REQ-20180327-005关于在宽带新装界面填入是否挖抢异网客户的需求', '3120121500453604', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'RSRV_VALUE_CODE': 'OPEN_MODE', 'RSRV_VALUE': '0', 'PROCESS_TAG': None, 'RELATION_TRADE_ID': None, 'STAFF_ID': 'ACHENLY0', 'DEPART_ID': '00000', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '办理类型，AUTH_SERIAL_NUMBER', 'INST_ID': 3120121500453605, 'OPER_CODE': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_NUM6': None, 'RSRV_NUM7': None, 'RSRV_NUM8': None, 'RSRV_NUM9': None, 'RSRV_NUM10': None, 'RSRV_NUM11': None, 'RSRV_NUM12': None, 'RSRV_NUM13': None, 'RSRV_NUM14': None, 'RSRV_NUM15': None, 'RSRV_NUM16': None, 'RSRV_NUM17': None, 'RSRV_NUM18': None, 'RSRV_NUM19': None, 'RSRV_NUM20': None, 'RSRV_STR1': '13467658909', 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_STR11': None, 'RSRV_STR12': None, 'RSRV_STR13': None, 'RSRV_STR14': None, 'RSRV_STR15': None, 'RSRV_STR16': None, 'RSRV_STR17': None, 'RSRV_STR18': None, 'RSRV_STR19': None, 'RSRV_STR20': None, 'RSRV_STR21': None, 'RSRV_STR22': None, 'RSRV_STR23': None, 'RSRV_STR24': None, 'RSRV_STR25': None, 'RSRV_STR26': None, 'RSRV_STR27': None, 'RSRV_STR28': None, 'RSRV_STR29': None, 'RSRV_STR30': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_DATE4': None, 'RSRV_DATE5': None, 'RSRV_DATE6': None, 'RSRV_DATE7': None, 'RSRV_DATE8': None, 'RSRV_DATE9': None, 'RSRV_DATE10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_TAG4': None, 'RSRV_TAG5': None, 'RSRV_TAG6': None, 'RSRV_TAG7': None, 'RSRV_TAG8': None, 'RSRV_TAG9': None, 'RSRV_TAG10': None}
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', 'OPEN_MODE', '0', None, None, 'ACHENLY0', '00000', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '办理类型，AUTH_SERIAL_NUMBER', '3120121500453605', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '13467658909', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 19:51:49】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RATE
【INFO】-【2020-12-25 19:51:49】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:50】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:50】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RATE
【INFO】-【2020-12-25 19:51:50】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'RATE': '100', 'MODIFY_TAG': '0', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'INST_ID': 3120121500453607, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 19:51:50】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '100', '0', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', '3120121500453607', None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 19:51:50】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 19:51:50】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 19:51:50】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 19:51:50】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:50】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:50】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923062, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 240, 'PRIORITY': 250, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99916037, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SALE_ACTIVE,TF_B_TRADE_DISCNT', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923062', '12', None, '3120121538644203', None, None, None, '240', '250', '0', 'Y', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99916037', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_SALE_ACTIVE,TF_B_TRADE_DISCNT', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', None, None, None, None, None, None, None, None, None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SALE_ACTIVE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SALE_ACTIVE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SALE_ACTIVE
【INFO】-【2020-12-25 19:51:51】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:51】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:51】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SALE_ACTIVE
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'INST_ID': 3120121500453608, 'TRADE_ID': 3120121587923062, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'SERIAL_NUMBER': '13467658909', 'SERIAL_NUMBER_B': None, 'PRODUCT_MODE': '02', 'PRODUCT_ID': 99915593, 'PRODUCT_NAME': '新业务权益包活动', 'PACKAGE_ID': 99966057, 'PACKAGE_NAME': '生活助手包5元档（合约版）', 'CAMPN_ID': 99915593, 'CAMPN_CODE': '99966057', 'CAMPN_NAME': None, 'CAMPN_TYPE': 'XYW', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'SCORE_CHANGED': None, 'CREDIT_VALUE': None, 'MONTHS': 12, 'END_MODE': None, 'ACTOR_PSPT_ID': None, 'ACTOR_PSPT_TYPE_CODE': None, 'ACTOR_PHONE': None, 'ACTOR_NAME': None, 'APPR_STAFF_ID': 'ACHENLY0', 'APPR_TIME': None, 'OUT_NET_PHONE': None, 'CONTRACT_ID': None, 'PROCESS_TAG': '0', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'RELATION_TRADE_ID': 3120121587923062, 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_CAUSE': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2021, 11, 30, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'DIMENSION_CODE': None, 'MAIN_SERIAL_NUMBER': None, 'SA_REGISTER_TYPE': None, 'SALE_PAYMENT_TYPE': None, 'DEST_SERIAL_NUMBER': None, 'OFFER_ID': 150099966057, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923062, 'PRODUCT_TYPE_CODE': None, 'CONTRACTSR_GIVE_SCORE': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_STR11': None, 'RSRV_STR12': None, 'RSRV_STR13': None, 'RSRV_STR14': None, 'RSRV_STR15': None, 'RSRV_STR16': None, 'RSRV_STR17': None, 'RSRV_STR18': None, 'RSRV_STR19': None, 'RSRV_STR20': None, 'RSRV_STR21': None, 'RSRV_STR22': None, 'RSRV_STR23': None, 'RSRV_STR24': None, 'RSRV_STR25': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'K', 'SEND_TYPE': None}
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121500453608', '3120121587923062', '12', '3105122612640081', '13467658909', None, '02', '99915593', '新业务权益包活动', '99966057', '生活助手包5元档（合约版）', '99915593', '99966057', None, 'XYW', '0', '0', '0', None, None, '12', None, None, None, None, None, 'ACHENLY0', None, None, None, '0', '2020-12-15 12:04:40', 'ACHENLY0', '3120121587923062', None, None, None, '2020-12-15 12:04:40', '2021-11-30 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, '150099966057', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923062', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'K', None]
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 19:51:51】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:51】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:52】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:52】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 19:51:52】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923062, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': -1, 'PRODUCT_ID': 99966057, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099662584, 'DISCNT_CODE': 99662584, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453609, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2021, 11, 30, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923062, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 19:51:52】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923062', '12', '3105122612640081', '-1', '-1', '99966057', 'D', '130099662584', '99662584', '0', None, '3120121500453609', None, None, None, '2020-12-15 12:04:40', '2021-11-30 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923062', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 19:51:52】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 19:51:52】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 19:51:52】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 19:51:52】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:52】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:52】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:51:53】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 19:51:53】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923063, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 996, 'PRIORITY': 320, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99916037, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SCENE', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '关于信用停开机服务规范的需求,mA314 业务区拆分于：20080105 22:52:22', 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 19:51:53】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923063', '12', None, '3120121538644203', None, None, None, '996', '320', '0', 'Y', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99916037', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_SCENE', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '关于信用停开机服务规范的需求,mA314 业务区拆分于：20080105 22:52:22', None, None, None, '0', None, None, None, None, None, None, None, None, None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 19:51:53】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SCENE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 19:51:53】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SCENE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 19:51:53】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SCENE
【INFO】-【2020-12-25 19:51:53】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 19:51:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 19:51:53】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:51:53】 - 【DataCheck】 - 【DataCheck.py】 - 第【157】行 >> ORA-00942: 表或视图不存在!
【INFO】-【2020-12-25 19:53:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:53:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:53:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:53:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【33】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【40】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【41】行 >> 
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【49】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【51】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【183】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【192】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm42@TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm42@TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 19:53:47】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm42', 'TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 19:53:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【33】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【40】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【41】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【49】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【51】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 19:53:47】 - 【DataMap】 - 【DataMap.py】 - 第【183】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 19:53:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm42' ;  
              
【INFO】-【2020-12-25 19:53:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM42/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB
【INFO】-【2020-12-25 19:53:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 19:53:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 19:53:48】 - 【DataMap】 - 【DataMap.py】 - 第【192】行 >> ======查询sql语句数据库返回结果:[{'USER_ID': '3107090108440948', 'CUST_ID': '3115120613547980', 'SERIAL_NUMBER': '13974916174', 'USER_TYPE_CODE': 'W', 'REMOVE_TAG': '0', 'EPARCHY_CODE': '0731', 'USER_STATE_CODESET': '0'}]
【INFO】-【2020-12-25 19:53:48】 - 【DataMap】 - 【DataMap.py】 - 第【196】行 >> 返回当前查询结果:{'USER_ID': '3107090108440948', 'CUST_ID': '3115120613547980', 'SERIAL_NUMBER': '13974916174', 'USER_TYPE_CODE': 'W', 'REMOVE_TAG': '0', 'EPARCHY_CODE': '0731', 'USER_STATE_CODESET': '0'}
【INFO】-【2020-12-25 20:01:57】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:01:57】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:01:57】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:01:57】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【33】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【43】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【44】行 >> 
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【51】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【53】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【185】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【194】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm42@TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm42@TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 20:01:57】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm42', 'TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 20:01:57】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【33】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【43】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【44】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【51】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【53】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm42', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 20:01:57】 - 【DataMap】 - 【DataMap.py】 - 第【185】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 20:01:57】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm42' ;  
              
【INFO】-【2020-12-25 20:01:58】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM42/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB
【INFO】-【2020-12-25 20:01:58】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:01:58】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:01:58】 - 【DataMap】 - 【DataMap.py】 - 第【194】行 >> ======查询sql语句数据库返回结果:[{'USER_ID': '3107090108440948', 'CUST_ID': '3115120613547980', 'SERIAL_NUMBER': '13974916174', 'USER_TYPE_CODE': 'W', 'REMOVE_TAG': '0', 'EPARCHY_CODE': '0731', 'USER_STATE_CODESET': '0'}]
【INFO】-【2020-12-25 20:01:58】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> 返回当前查询结果:{'USER_ID': '3107090108440948', 'CUST_ID': '3115120613547980', 'SERIAL_NUMBER': '13974916174', 'USER_TYPE_CODE': 'W', 'REMOVE_TAG': '0', 'EPARCHY_CODE': '0731', 'USER_STATE_CODESET': '0'}
【INFO】-【2020-12-25 20:02:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:02:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:02:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:02:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【33】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【43】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【44】行 >> 
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【51】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【53】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【185】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【194】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm11@TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm11@TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 20:02:41】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm11', 'TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 20:02:41】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【33】行 >> 查询DATA_MAPPING结果:[]
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【35】行 >> 查询结果为空
【INFO】-【2020-12-25 20:02:41】 - 【DataMap】 - 【DataMap.py】 - 第【58】行 >> 查询异常!
【INFO】-【2020-12-25 20:05:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:05:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:05:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:05:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm11@TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm11@TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 20:05:47】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm11', 'TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 20:05:47】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}, {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}, {'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 20:05:47】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 20:05:47】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm11' ;  
              
【INFO】-【2020-12-25 20:05:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM11/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB

【INFO】-【2020-12-25 20:05:48】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:08】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:08】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:08】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:10】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:10】 - 【DataCheck】 - 【DataCheck.py】 - 第【98】行 >> select intf_id,trade_id,trade_type_code from tf_b_trade where order_id = 3120121538644203
                          union  all 
                          select intf_id,trade_id,trade_type_code from tf_b_trade_2020 where order_id = 3120121538644203
                        
【INFO】-【2020-12-25 20:06:10】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【DataCheck.py】 - 第【118】行 >> 已获取的所有子表:[{'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'TRADE_ID': 3120121587923058, 'TRADE_TYPE_CODE': 3564}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'TRADE_ID': 3120121587923059, 'TRADE_TYPE_CODE': 3564}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC', 'TRADE_ID': 3120121587923060, 'TRADE_TYPE_CODE': 110}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_USER,TF_B_TRADE_ACCOUNT,TF_B_TRADE_ACCOUNT_ACCTDAY,TF_B_TRADE_PAYRELATION,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC,TF_B_TRADE_SVCSTATE,TF_B_TRADE_BROADBAND_ACT,TF_B_TRADE_BROADBAND,TF_B_TRADE_RES,TF_B_TRADE_OTHER,TF_B_TRADE_RATE', 'TRADE_ID': 3120121587923061, 'TRADE_TYPE_CODE': 1002}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SALE_ACTIVE,TF_B_TRADE_DISCNT', 'TRADE_ID': 3120121587923062, 'TRADE_TYPE_CODE': 240}, {'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SCENE', 'TRADE_ID': 3120121587923063, 'TRADE_TYPE_CODE': 996}],返回6条数据
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【DataCheck.py】 - 第【131】行 >> 返回的子台帐列表：[{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_RELATION'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_RELATION'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_PRODUCT'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_SVC'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_USER'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT_ACCTDAY'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PAYRELATION'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PRODUCT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVC'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVCSTATE'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND_ACT'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RES'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_OTHER'}, {'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RATE'}, {'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_SALE_ACTIVE'}, {'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_DISCNT'}, {'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE'}, {'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE_SCENE'}]
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923058', 'TF_B_TRADE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923058', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923058, 'subTrade': 'TF_B_TRADE_RELATION'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923058', 'TF_B_TRADE_RELATION']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923059', 'TF_B_TRADE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923059', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 3564, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923059, 'subTrade': 'TF_B_TRADE_RELATION'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3564', '3120121538644203', '3120121587923059', 'TF_B_TRADE_RELATION']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_PRODUCT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE_PRODUCT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 110, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923060, 'subTrade': 'TF_B_TRADE_SVC'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['110', '3120121538644203', '3120121587923060', 'TF_B_TRADE_SVC']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_USER'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_USER']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_ACCOUNT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_ACCOUNT_ACCTDAY'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_ACCOUNT_ACCTDAY']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PAYRELATION'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_PAYRELATION']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_PRODUCT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_PRODUCT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVC'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_SVC']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_SVCSTATE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_SVCSTATE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND_ACT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_BROADBAND_ACT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_BROADBAND'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_BROADBAND']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RES'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_RES']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_OTHER'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_OTHER']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 1002, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923061, 'subTrade': 'TF_B_TRADE_RATE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['1002', '3120121538644203', '3120121587923061', 'TF_B_TRADE_RATE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['240', '3120121538644203', '3120121587923062', 'TF_B_TRADE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_SALE_ACTIVE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['240', '3120121538644203', '3120121587923062', 'TF_B_TRADE_SALE_ACTIVE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 240, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923062, 'subTrade': 'TF_B_TRADE_DISCNT'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['240', '3120121538644203', '3120121587923062', 'TF_B_TRADE_DISCNT']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['996', '3120121538644203', '3120121587923063', 'TF_B_TRADE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_TYPE_CODE': 996, 'ORDER_ID': '3120121538644203', 'TRADE_ID': 3120121587923063, 'subTrade': 'TF_B_TRADE_SCENE'}
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['996', '3120121538644203', '3120121587923063', 'TF_B_TRADE_SCENE']
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 20:06:11】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 20:06:11】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:11】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923058, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 3564, 'PRIORITY': 260, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': '0', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99913849, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': '亲情权益网主卡', 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': '新增主卡：13467658', 'RSRV_STR10': '909，主卡优惠：亲情主卡', 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923058', '12', None, '3120121538644203', None, None, None, '3564', '260', '0', '0', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99913849', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', None, None, None, None, None, '亲情权益网主卡', None, None, '新增主卡：13467658', '909，主卡优惠：亲情主卡', None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:12】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:12】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923058, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': 3120121500035703, 'PACKAGE_ID': 99966069, 'PRODUCT_ID': 99915597, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664914, 'DISCNT_CODE': 99664914, 'SPEC_TAG': '2', 'RELATION_TYPE_CODE': '84', 'INST_ID': 3120121500453584, 'CAMPN_ID': 0, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923058, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923058', '12', '3105122612640081', '3120121500035703', '99966069', '99915597', 'D', '130099664914', '99664914', '2', '84', '3120121500453584', '0', None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923058', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923058'
【INFO】-【2020-12-25 20:06:12】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 20:06:12】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:13】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923058, 'ACCEPT_MONTH': 12, 'USER_ID_A': 3120121500035703, 'SERIAL_NUMBER_A': '88843467658909', 'USER_ID_B': 3105122612640081, 'SERIAL_NUMBER_B': '13467658909', 'RELATION_TYPE_CODE': '84', 'ROLE_TYPE_CODE': None, 'ROLE_CODE_A': '0', 'ROLE_CODE_B': '1', 'ORDERNO': 0, 'SHORT_CODE': '520', 'INST_ID': 3120121500453585, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': '0731', 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923058}
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923058', '12', '3120121500035703', '88843467658909', '3105122612640081', '13467658909', '84', None, '0', '1', '0', '520', '3120121500453585', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, '0731', None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923058']
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 20:06:13】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:13】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923059, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 3564, 'PRIORITY': 260, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3116090617945674, 'CUST_NAME': '485703324991688121', 'USER_ID': 3106022702310071, 'ACCT_ID': 3106031400475075, 'SERIAL_NUMBER': '13407310373', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31L', 'PRODUCT_ID': 31799360, 'BRAND_CODE': 'G018', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': '亲情权益网副卡', 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': '新增副卡：13407310', 'RSRV_STR10': '373，副卡优惠：亲情成员', 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923059', '12', None, '3120121538644203', None, None, None, '3564', '260', '0', 'Y', '0', '0', '3116090617945674', '485703324991688121', '3106022702310071', '3106031400475075', '13407310373', '00', '0731', 'A31L', '31799360', 'G018', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_DISCNT,TF_B_TRADE_RELATION', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', None, None, None, None, None, '亲情权益网副卡', None, None, '新增副卡：13407310', '373，副卡优惠：亲情成员', None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 20:06:13】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:13】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:14】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923059, 'ACCEPT_MONTH': 12, 'USER_ID': 3106022702310071, 'USER_ID_A': 3120121500035703, 'PACKAGE_ID': 99966069, 'PRODUCT_ID': 99915597, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664915, 'DISCNT_CODE': 99664915, 'SPEC_TAG': '2', 'RELATION_TYPE_CODE': '84', 'INST_ID': 3120121500453587, 'CAMPN_ID': 0, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923059, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923059', '12', '3106022702310071', '3120121500035703', '99966069', '99915597', 'D', '130099664915', '99664915', '2', '84', '3120121500453587', '0', None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923059', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RELATION_2020 where trade_id = '3120121587923059'
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 20:06:14】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:14】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RELATION
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923059, 'ACCEPT_MONTH': 12, 'USER_ID_A': 3120121500035703, 'SERIAL_NUMBER_A': '88843467658909', 'USER_ID_B': 3106022702310071, 'SERIAL_NUMBER_B': '13407310373', 'RELATION_TYPE_CODE': '84', 'ROLE_TYPE_CODE': None, 'ROLE_CODE_A': '0', 'ROLE_CODE_B': '2', 'ORDERNO': 0, 'SHORT_CODE': None, 'INST_ID': 3120121500453588, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': '0731', 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923059}
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923059', '12', '3120121500035703', '88843467658909', '3106022702310071', '13407310373', '84', None, '0', '2', '0', None, '3120121500453588', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, '0731', None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923059']
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:14】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 20:06:14】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:15】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:15】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 20:06:15】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 110, 'PRIORITY': 320, 'SUBSCRIBE_TYPE': 1, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99916037, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '1', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': 'G045', 'RSRV_STR2': '99916037', 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 20:06:15】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', None, '3120121538644203', None, None, None, '110', '320', '1', 'Y', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99916037', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '1', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', 'G045', '99916037', None, None, None, None, None, None, None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 20:06:15】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:15】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:15】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 20:06:15】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:15】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:15】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PRODUCT_MODE': '00', 'BRAND_CODE': 'G045', 'OLD_PRODUCT_ID': 99913849, 'OLD_BRAND_CODE': 'G045', 'INST_ID': 3120121500453589, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'MAIN_TAG': '1', 'OFFER_ID': 110099916037, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'P'}
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '00', 'G045', '99913849', 'G045', '3120121500453589', None, '2021-01-01 00:00:00', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, '1', '110099916037', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'P']
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PRODUCT_MODE': '00', 'BRAND_CODE': 'G045', 'OLD_PRODUCT_ID': None, 'OLD_BRAND_CODE': None, 'INST_ID': 3120051238609210, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2020, 6, 1, 0, 0), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '1', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'MAIN_TAG': '1', 'OFFER_ID': 110099913849, 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'DONE_CODE': 3120121587923060, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'P'}
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99913849', '00', 'G045', None, None, '3120051238609210', None, '2020-06-01 00:00:00', '2020-12-31 23:59:59', '1', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, '1', '110099913849', None, None, None, '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'P']
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:16】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:16】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': 99965321, 'PRODUCT_ID': 99916037, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664885, 'DISCNT_CODE': 99664885, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453590, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99965321', '99916037', 'D', '130099664885', '99664885', '0', None, '3120121500453590', None, None, None, '2021-01-01 00:00:00', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': 99941020, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099662596, 'DISCNT_CODE': 99662596, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120051239923973, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 5, 12, 10, 29, 23), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '1', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99941020', '99913849', 'D', '130099662596', '99662596', '0', None, '3120051239923973', None, None, None, '2020-05-12 10:29:23', '2020-12-31 23:59:59', '1', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': 99963710, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099664808, 'DISCNT_CODE': 99664808, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120051238609211, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 6, 1, 0, 0), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '1', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99963710', '99913849', 'D', '130099664808', '99664808', '0', None, '3120051238609211', None, None, None, '2020-06-01 00:00:00', '2020-12-31 23:59:59', '1', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923060'
【INFO】-【2020-12-25 20:06:16】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SVC
【INFO】-【2020-12-25 20:06:16】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:16】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:16】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SVC
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': -1, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000000, 'SERVICE_ID': 0, 'MAIN_TAG': '1', 'INST_ID': 3109040467478776, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '-1', 'S', '120000000000', '0', '1', '3109040467478776', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000001, 'SERVICE_ID': 1, 'MAIN_TAG': '0', 'INST_ID': 3109040445841257, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000001', '1', '0', '3109040445841257', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000002, 'SERVICE_ID': 2, 'MAIN_TAG': '0', 'INST_ID': 3109040452276697, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000002', '2', '0', '3109040452276697', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000005, 'SERVICE_ID': 5, 'MAIN_TAG': '0', 'INST_ID': 3109040447377930, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000005', '5', '0', '3109040447377930', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000014, 'SERVICE_ID': 14, 'MAIN_TAG': '0', 'INST_ID': 3109040447576602, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000014', '14', '0', '3109040447576602', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000018, 'SERVICE_ID': 18, 'MAIN_TAG': '0', 'INST_ID': 3109040457577901, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000018', '18', '0', '3109040457577901', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000023, 'SERVICE_ID': 23, 'MAIN_TAG': '0', 'INST_ID': 3109040449808223, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000023', '23', '0', '3109040449808223', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000076, 'SERVICE_ID': 76, 'MAIN_TAG': '0', 'INST_ID': 3109040472676465, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000076', '76', '0', '3109040472676465', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': -1, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000088, 'SERVICE_ID': 88, 'MAIN_TAG': '0', 'INST_ID': 3114072564968701, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2014, 7, 25, 11, 13, 50), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': '换USIM卡自助开通4G上网服务', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '-1', 'S', '120000000088', '88', '0', '3114072564968701', None, None, None, '2014-07-25 11:13:50', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', '换USIM卡自助开通4G上网服务', None, None, None, None, None, None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000093, 'SERVICE_ID': 93, 'MAIN_TAG': '0', 'INST_ID': 3109040465046680, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000093', '93', '0', '3109040465046680', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000094, 'SERVICE_ID': 94, 'MAIN_TAG': '0', 'INST_ID': 3109040444820702, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000094', '94', '0', '3109040444820702', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000095, 'SERVICE_ID': 95, 'MAIN_TAG': '0', 'INST_ID': 3109040471566911, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000095', '95', '0', '3109040471566911', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000096, 'SERVICE_ID': 96, 'MAIN_TAG': '0', 'INST_ID': 3109040451744005, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000096', '96', '0', '3109040451744005', None, None, None, '2005-12-26 12:48:27', '2050-12-31 00:00:00', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000098, 'SERVICE_ID': 98, 'MAIN_TAG': '0', 'INST_ID': 3114111587188288, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2014, 11, 15, 2, 36, 38), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000098', '98', '0', '3114111587188288', None, None, None, '2014-11-15 02:36:38', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000099, 'SERVICE_ID': 99, 'MAIN_TAG': '0', 'INST_ID': 3114111587188289, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2014, 11, 15, 2, 36, 38), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956841', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000099', '99', '0', '3114111587188289', None, None, None, '2014-11-15 02:36:38', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, '31799501', '31956841', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000138, 'SERVICE_ID': 138, 'MAIN_TAG': '0', 'INST_ID': 3111102554153914, 'CAMPN_ID': 0, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2011, 10, 25, 16, 6, 41), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 0, 'RSRV_NUM3': 0, 'RSRV_NUM4': 0, 'RSRV_NUM5': 0, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': '1', 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000138', '138', '0', '3111102554153914', '0', None, None, '2011-10-25 16:06:41', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, '0', '0', '0', '0', '0', None, None, '31799501', '31956843', None, None, None, None, None, None, '1', None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000190, 'SERVICE_ID': 190, 'MAIN_TAG': '0', 'INST_ID': 3117041560586721, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2017, 4, 15, 3, 31, 32), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000000190', '190', '0', '3117041560586721', None, None, None, '2017-04-15 03:31:32', '2050-12-31 23:59:59', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', None, None, None, None, None, None, None, None, None, None, None, '31799501', '31956843', None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923060, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PRODUCT_ID': 99916037, 'PACKAGE_ID': 99965322, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000003000, 'SERVICE_ID': 3000, 'MAIN_TAG': '0', 'INST_ID': 3109040465629356, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2009, 4, 4, 0, 0), 'END_DATE': datetime.datetime(2050, 11, 19, 0, 1, 9), 'MODIFY_TAG': 'U', 'OPER_CODE': None, 'IS_NEED_PF': '0', 'CREATE_DATE': None, 'CREATE_STAFF_ID': None, 'CREATE_DEPART_ID': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923060, 'REMARK': 'NG割接导入', 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': 0, 'RSRV_NUM2': 31000000, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '31799501', 'RSRV_STR4': '31956843', 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': '统一开通', 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923060', '12', '3105122612640081', '-1', '99916037', '99965322', 'S', '120000003000', '3000', '0', '3109040465629356', None, None, None, '2009-04-04 00:00:00', '2050-11-19 00:01:09', 'U', None, '0', None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923060', 'NG割接导入', None, None, None, '0', '31000000', None, None, None, None, None, '31799501', '31956843', None, None, None, '统一开通', None, None, None, None, None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 20:06:17】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:17】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:17】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 1002, 'PRIORITY': 320, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'F', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3120121500008122, 'CUST_NAME': '4**137963985946206', 'USER_ID': 3120121500035704, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '731X17658102', 'NET_TYPE_CODE': '04', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A311', 'PRODUCT_ID': 99913849, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': '13467658909', 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_USER,TF_B_TRADE_ACCOUNT,TF_B_TRADE_ACCOUNT_ACCTDAY,TF_B_TRADE_PAYRELATION,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC,TF_B_TRADE_SVCSTATE,TF_B_TRADE_BROADBAND_ACT,TF_B_TRADE_BROADBAND,TF_B_TRADE_RES,TF_B_TRADE_OTHER,TF_B_TRADE_RATE', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '1', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 25, 8, 0), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '1', 'RSRV_STR1': '2020-12-25 08:00:00', 'RSRV_STR2': '149394', 'RSRV_STR3': '新和家庭2019版100M宽带标准资费', 'RSRV_STR4': '智慧平台测试工号', 'RSRV_STR5': '系统维护', 'RSRV_STR6': '11111111111', 'RSRV_STR7': '0', 'RSRV_STR8': '0|0|0', 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', None, '3120121538644203', None, None, None, '1002', '320', '0', 'F', '0', '0', '3120121500008122', '4**137963985946206', '3120121500035704', '3105122610273482', '731X17658102', '04', '0731', 'A311', '99913849', 'G045', None, None, None, '13467658909', None, None, 'TF_B_TRADE,TF_B_TRADE_USER,TF_B_TRADE_ACCOUNT,TF_B_TRADE_ACCOUNT_ACCTDAY,TF_B_TRADE_PAYRELATION,TF_B_TRADE_PRODUCT,TF_B_TRADE_DISCNT,TF_B_TRADE_SVC,TF_B_TRADE_SVCSTATE,TF_B_TRADE_BROADBAND_ACT,TF_B_TRADE_BROADBAND,TF_B_TRADE_RES,TF_B_TRADE_OTHER,TF_B_TRADE_RATE', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '1', None, '2020-12-25 08:00:00', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '1', '2020-12-25 08:00:00', '149394', '新和家庭2019版100M宽带标准资费', '智慧平台测试工号', '系统维护', '11111111111', '0', '0|0|0', None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_USER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_USER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:17】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_USER
【INFO】-【2020-12-25 20:06:17】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:18】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_USER
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'CUST_ID': 3120121500008122, 'USECUST_ID': 3120121500008122, 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A311', 'CITY_CODE_A': '0   ', 'USER_PASSWD': None, 'USER_DIFF_CODE': '00', 'USER_TYPE_CODE': 'W', 'USER_TAG_SET': None, 'USER_STATE_CODESET': '0', 'NET_TYPE_CODE': '04', 'SERIAL_NUMBER': '731X17658102', 'CONTRACT_ID': '0', 'ACCT_TAG': '0', 'PREPAY_TAG': '1', 'MPUTE_MONTH_FEE': '0', 'MPUTE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'FIRST_CALL_TIME': None, 'LAST_STOP_TIME': None, 'CHANGEUSER_DATE': None, 'IN_NET_MODE': None, 'IN_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'IN_STAFF_ID': 'ACHENLY0', 'IN_DEPART_ID': '00000', 'OPEN_MODE': '0', 'OPEN_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'OPEN_STAFF_ID': 'ACHENLY0', 'OPEN_DEPART_ID': '00000', 'DEVELOP_STAFF_ID': 'ACHENLY0', 'DEVELOP_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'DEVELOP_DEPART_ID': '23271', 'DEVELOP_CITY_CODE': 'A311', 'DEVELOP_EPARCHY_CODE': '0731', 'DEVELOP_NO': None, 'ASSURE_CUST_ID': None, 'ASSURE_TYPE_CODE': None, 'ASSURE_DATE': None, 'REMOVE_TAG': '0', 'PRE_DESTROY_TIME': None, 'DESTROY_TIME': None, 'REMOVE_EPARCHY_CODE': None, 'REMOVE_CITY_CODE': None, 'REMOVE_DEPART_ID': None, 'REMOVE_REASON_CODE': None, 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '宽带用户创建', 'IS4G_FLAG': None, 'DY_TAG': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '3120121500008122', '3120121500008122', '0731', 'A311', '0   ', None, '00', 'W', None, '0', '04', '731X17658102', '0', '0', '1', '0', '2020-12-15 12:04:40', None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'ACHENLY0', '2020-12-15 12:04:40', '23271', 'A311', '0731', None, None, None, None, '0', None, None, None, None, None, None, '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '宽带用户创建', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_ACCOUNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_ACCOUNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_ACCOUNT
【INFO】-【2020-12-25 20:06:18】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:18】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:18】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_ACCOUNT
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'ACCT_ID': 3105122610273482, 'CUST_ID': 3120121500008122, 'PAY_NAME': '389688009681300302', 'PAY_MODE_CODE': '0', 'ACCT_DIFF_CODE': '0', 'ACCT_PASSWD': None, 'ACCT_TAG': None, 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'BANK_CODE': '788176542566224700', 'BANK_ACCT_NO': '586774360921030349', 'SCORE_VALUE': 0, 'CREDIT_CLASS_ID': 0, 'BASIC_CREDIT_VALUE': 1, 'CREDIT_VALUE': 0, 'DEBUTY_USER_ID': 3120121500035704, 'DEBUTY_CODE': None, 'CONTRACT_NO': None, 'DEPOSIT_PRIOR_RULE_ID': 0, 'ITEM_PRIOR_RULE_ID': 0, 'OPEN_DATE': datetime.datetime(2005, 12, 26, 12, 48, 27), 'REMOVE_TAG': '0', 'REMOVE_DATE': None, 'MODIFY_TAG': '0', 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'REMARK': 'NG割接导入', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': '20060103000531@0@0', 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:18】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3105122610273482', '3120121500008122', '389688009681300302', '0', '0', None, None, '00', '0731', 'A31H', '788176542566224700', '586774360921030349', '0', '0', '1', '0', '3120121500035704', None, None, '0', '0', '2005-12-26 12:48:27', '0', None, '0', 'ACHENLY0', '00000', '2020-12-15 12:04:40', 'NG割接导入', None, None, '20060103000531@0@0', None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_ACCOUNT_ACCTDAY_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_ACCOUNT_ACCTDAY_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_ACCOUNT_ACCTDAY
【INFO】-【2020-12-25 20:06:19】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:19】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_ACCOUNT_ACCTDAY
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'ACCT_ID': 3105122610273482, 'ACCT_DAY': 1, 'CHG_TYPE': '1', 'CHG_MODE': '0', 'CHG_DATE': datetime.datetime(2020, 12, 15, 0, 0), 'FIRST_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'INST_ID': 3120121500453591, 'START_DATE': datetime.datetime(2020, 12, 15, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_TAG1': '1', 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3105122610273482', '1', '1', '0', '2020-12-15 00:00:00', '2021-01-01 00:00:00', '3120121500453591', '2020-12-15 00:00:00', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, None, None, None, '1', None, None]
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_PAYRELATION_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_PAYRELATION_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:19】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_PAYRELATION
【INFO】-【2020-12-25 20:06:19】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:19】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:19】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_PAYRELATION
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'ACCT_ID': 3105122610273482, 'PAYITEM_CODE': -1, 'ACCT_PRIORITY': 0, 'USER_PRIORITY': 0, 'ADDUP_MONTHS': None, 'ADDUP_METHOD': None, 'BIND_TYPE': '1', 'ACT_TAG': '1', 'DEFAULT_TAG': '1', 'LIMIT_TYPE': '0', 'LIMIT_VALUE': 0, 'COMPLEMENT_TAG': '0', 'INST_ID': 3120121500453592, 'START_CYCLE_ID': 20201215, 'END_CYCLE_ID': 20501231, 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '3105122610273482', '-1', '0', '0', None, None, '1', '1', '1', '0', '0', '0', '3120121500453592', '20201215', '20501231', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'ACCT_ID': 3105122610273482, 'PAYITEM_CODE': -1, 'ACCT_PRIORITY': 0, 'USER_PRIORITY': 0, 'ADDUP_MONTHS': None, 'ADDUP_METHOD': None, 'BIND_TYPE': '1', 'ACT_TAG': '1', 'DEFAULT_TAG': '1', 'LIMIT_TYPE': '0', 'LIMIT_VALUE': 0, 'COMPLEMENT_TAG': '0', 'INST_ID': 3120121500453606, 'START_CYCLE_ID': 20201215, 'END_CYCLE_ID': 20501231, 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '3105122610273482', '-1', '0', '0', None, None, '1', '1', '1', '0', '0', '0', '3120121500453606', '20201215', '20501231', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_PRODUCT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 20:06:20】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:20】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:20】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_PRODUCT
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PRODUCT_MODE': '00', 'BRAND_CODE': 'G045', 'OLD_PRODUCT_ID': None, 'OLD_BRAND_CODE': None, 'INST_ID': 3120121500453593, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'MAIN_TAG': '1', 'OFFER_ID': 110099913849, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'P'}
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '99913849', '00', 'G045', None, None, '3120121500453593', None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, '1', '110099913849', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'P']
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:20】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:20】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:21】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PACKAGE_ID': 51700050, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099000099, 'DISCNT_CODE': 99000099, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453594, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2020, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '51700050', '99913849', 'D', '130099000099', '99000099', '0', None, '3120121500453594', None, None, None, '2020-12-15 12:04:40', '2020-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PACKAGE_ID': 51700050, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130020181800, 'DISCNT_CODE': 20181800, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453595, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '51700050', '99913849', 'D', '130020181800', '20181800', '0', None, '3120121500453595', None, None, None, '2020-12-15 12:04:40', '2050-12-31 00:00:00', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PACKAGE_ID': 51700050, 'PRODUCT_ID': 99913849, 'OFFER_TYPE': 'D', 'OFFER_ID': 130020181810, 'DISCNT_CODE': 20181810, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453596, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '51700050', '99913849', 'D', '130020181810', '20181810', '0', None, '3120121500453596', None, None, None, '2020-12-15 12:04:40', '2050-12-31 00:00:00', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SVC_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SVC
【INFO】-【2020-12-25 20:06:21】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:21】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:21】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SVC
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PACKAGE_ID': 51700050, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000618, 'SERVICE_ID': 618, 'MAIN_TAG': '0', 'INST_ID': 3120121500453597, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '99913849', '51700050', 'S', '120000000618', '618', '0', '3120121500453597', None, None, None, '2021-01-01 00:00:00', '2050-12-31 00:00:00', '0', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'PRODUCT_ID': 99913849, 'PACKAGE_ID': -1, 'OFFER_TYPE': 'S', 'OFFER_ID': 120000000000, 'SERVICE_ID': 0, 'MAIN_TAG': '1', 'INST_ID': 3120121500453599, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:21】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '99913849', '-1', 'S', '120000000000', '0', '1', '3120121500453599', None, None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SVCSTATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SVCSTATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SVCSTATE
【INFO】-【2020-12-25 20:06:22】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:22】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SVCSTATE
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'INST_ID': 3120121500453598, 'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'SERVICE_ID': 618, 'MAIN_TAG': '0', 'STATE_CODE': '0', 'START_DATE': datetime.datetime(2021, 1, 1, 0, 0), 'END_DATE': datetime.datetime(2050, 12, 31, 0, 0), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121500453598', '3120121587923061', '12', '3120121500035704', '618', '0', '0', '2021-01-01 00:00:00', '2050-12-31 00:00:00', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'INST_ID': 3120121500453600, 'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'SERVICE_ID': 0, 'MAIN_TAG': '1', 'STATE_CODE': '0', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121500453600', '3120121587923061', '12', '3120121500035704', '0', '1', '0', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_BROADBAND_ACT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_BROADBAND_ACT_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:22】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_BROADBAND_ACT
【INFO】-【2020-12-25 20:06:22】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:22】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:22】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_BROADBAND_ACT
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'MODIFY_TAG': '0', 'INST_ID': 3120121500453601, 'PARTITION_ID': 5704, 'USER_ID': 3120121500035704, 'SERIAL_NUMBER': '13467658909', 'ACCESS_TYPE': '铁通FTTH', 'ACCESS_ACCT': '731X17658102', 'ACCESS_PWD': '>B;@:6', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'MAIN_TAG': '1', 'PRES_ISTR069': None, 'PRES_PASSWORD': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_STR1': '0', 'RSRV_NUM3': None, 'RSRV_STR2': '2050-12-31T00:00', 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR3': '999999', 'RSRV_STR4': '21', 'RSRV_STR5': '13974936964', 'RSRV_TAG1': None, 'RSRV_TAG2': '0', 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '0', '3120121500453601', '5704', '3120121500035704', '13467658909', '铁通FTTH', '731X17658102', '>B;@:6', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', '1', None, None, None, None, '0', None, '2050-12-31T00:00', None, None, '999999', '21', '13974936964', None, '0', None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_BROADBAND_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_BROADBAND_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_BROADBAND
【INFO】-【2020-12-25 20:06:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:23】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_BROADBAND
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'MODIFY_TAG': '0', 'INST_ID': 3120121500453602, 'PARTITION_ID': 5704, 'USER_ID': 3120121500035704, 'ADDR_ID': '-841342793', 'ADDR_NAME': '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号', 'ADDR_DESC': '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号【】', 'MOFFICE_ID': '0', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'IP_TYPE': None, 'PORT_TYPE': None, 'ACCT_PASSWD': None, 'PHONE': None, 'CONTACT': None, 'CONTACT_PHONE': None, 'PROVIDER_CODE': None, 'EQPT_PROVIER': None, 'SUGGEST_DATE': datetime.datetime(2020, 12, 25, 0, 0), 'OLD_ADDR_DESC': None, 'OLD_ADDR_NAME': None, 'OLD_ADDR_ID': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '0', '3120121500453602', '5704', '3120121500035704', '-841342793', '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号', '长沙天心区东塘街道办事处芙蓉中路省农业银行宿舍&#40;铁通割接&#41;小区0号【】', '0', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', None, None, None, None, None, None, None, None, '2020-12-25 00:00:00', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RES_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RES_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:23】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RES
【INFO】-【2020-12-25 20:06:23】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:24】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RES
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'USER_ID_A': -1, 'RES_TYPE_CODE': '6', 'RES_CODE': '-1', 'IMSI': None, 'KI': None, 'INST_ID': 3120121500453603, 'CAMPN_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '宽带用户创建', 'SIM_OPC': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '-1', '6', '-1', None, None, '3120121500453603', None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '宽带用户创建', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_OTHER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_OTHER_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_OTHER
【INFO】-【2020-12-25 20:06:24】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:24】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:24】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_OTHER
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'RSRV_VALUE_CODE': 'IS_RETE_MIRABILE', 'RSRV_VALUE': None, 'PROCESS_TAG': None, 'RELATION_TRADE_ID': None, 'STAFF_ID': None, 'DEPART_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': 'HXYD-YZ-REQ-20180327-005关于在宽带新装界面填入是否挖抢异网客户的需求', 'INST_ID': 3120121500453604, 'OPER_CODE': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_NUM6': None, 'RSRV_NUM7': None, 'RSRV_NUM8': None, 'RSRV_NUM9': None, 'RSRV_NUM10': None, 'RSRV_NUM11': None, 'RSRV_NUM12': None, 'RSRV_NUM13': None, 'RSRV_NUM14': None, 'RSRV_NUM15': None, 'RSRV_NUM16': None, 'RSRV_NUM17': None, 'RSRV_NUM18': None, 'RSRV_NUM19': None, 'RSRV_NUM20': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_STR11': None, 'RSRV_STR12': None, 'RSRV_STR13': None, 'RSRV_STR14': None, 'RSRV_STR15': None, 'RSRV_STR16': None, 'RSRV_STR17': None, 'RSRV_STR18': None, 'RSRV_STR19': None, 'RSRV_STR20': None, 'RSRV_STR21': None, 'RSRV_STR22': None, 'RSRV_STR23': None, 'RSRV_STR24': None, 'RSRV_STR25': None, 'RSRV_STR26': None, 'RSRV_STR27': None, 'RSRV_STR28': None, 'RSRV_STR29': None, 'RSRV_STR30': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_DATE4': None, 'RSRV_DATE5': None, 'RSRV_DATE6': None, 'RSRV_DATE7': None, 'RSRV_DATE8': None, 'RSRV_DATE9': None, 'RSRV_DATE10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_TAG4': None, 'RSRV_TAG5': None, 'RSRV_TAG6': None, 'RSRV_TAG7': None, 'RSRV_TAG8': None, 'RSRV_TAG9': None, 'RSRV_TAG10': None}
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', 'IS_RETE_MIRABILE', None, None, None, None, None, '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'HXYD-YZ-REQ-20180327-005关于在宽带新装界面填入是否挖抢异网客户的需求', '3120121500453604', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'RSRV_VALUE_CODE': 'OPEN_MODE', 'RSRV_VALUE': '0', 'PROCESS_TAG': None, 'RELATION_TRADE_ID': None, 'STAFF_ID': 'ACHENLY0', 'DEPART_ID': '00000', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'MODIFY_TAG': '0', 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '办理类型，AUTH_SERIAL_NUMBER', 'INST_ID': 3120121500453605, 'OPER_CODE': None, 'IS_NEED_PF': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_NUM6': None, 'RSRV_NUM7': None, 'RSRV_NUM8': None, 'RSRV_NUM9': None, 'RSRV_NUM10': None, 'RSRV_NUM11': None, 'RSRV_NUM12': None, 'RSRV_NUM13': None, 'RSRV_NUM14': None, 'RSRV_NUM15': None, 'RSRV_NUM16': None, 'RSRV_NUM17': None, 'RSRV_NUM18': None, 'RSRV_NUM19': None, 'RSRV_NUM20': None, 'RSRV_STR1': '13467658909', 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_STR11': None, 'RSRV_STR12': None, 'RSRV_STR13': None, 'RSRV_STR14': None, 'RSRV_STR15': None, 'RSRV_STR16': None, 'RSRV_STR17': None, 'RSRV_STR18': None, 'RSRV_STR19': None, 'RSRV_STR20': None, 'RSRV_STR21': None, 'RSRV_STR22': None, 'RSRV_STR23': None, 'RSRV_STR24': None, 'RSRV_STR25': None, 'RSRV_STR26': None, 'RSRV_STR27': None, 'RSRV_STR28': None, 'RSRV_STR29': None, 'RSRV_STR30': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_DATE4': None, 'RSRV_DATE5': None, 'RSRV_DATE6': None, 'RSRV_DATE7': None, 'RSRV_DATE8': None, 'RSRV_DATE9': None, 'RSRV_DATE10': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_TAG4': None, 'RSRV_TAG5': None, 'RSRV_TAG6': None, 'RSRV_TAG7': None, 'RSRV_TAG8': None, 'RSRV_TAG9': None, 'RSRV_TAG10': None}
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', 'OPEN_MODE', '0', None, None, 'ACHENLY0', '00000', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '办理类型，AUTH_SERIAL_NUMBER', '3120121500453605', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, '13467658909', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_RATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_RATE_2020 where trade_id = '3120121587923061'
【INFO】-【2020-12-25 20:06:24】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_RATE
【INFO】-【2020-12-25 20:06:24】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:25】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:25】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_RATE
【INFO】-【2020-12-25 20:06:25】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923061, 'ACCEPT_MONTH': 12, 'USER_ID': 3120121500035704, 'RATE': '100', 'MODIFY_TAG': '0', 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2050, 12, 31, 23, 59, 59), 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '移动宽带创建', 'INST_ID': 3120121500453607, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923061}
【INFO】-【2020-12-25 20:06:25】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923061', '12', '3120121500035704', '100', '0', '2020-12-15 12:04:40', '2050-12-31 23:59:59', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '移动宽带创建', '3120121500453607', None, None, None, None, None, None, None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923061']
【INFO】-【2020-12-25 20:06:25】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 20:06:25】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 20:06:25】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 20:06:25】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:25】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:26】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923062, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 240, 'PRIORITY': 250, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99916037, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SALE_ACTIVE,TF_B_TRADE_DISCNT', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923062', '12', None, '3120121538644203', None, None, None, '240', '250', '0', 'Y', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99916037', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_SALE_ACTIVE,TF_B_TRADE_DISCNT', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, '0', None, None, None, None, None, None, None, None, None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SALE_ACTIVE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SALE_ACTIVE_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SALE_ACTIVE
【INFO】-【2020-12-25 20:06:26】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:26】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:26】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_SALE_ACTIVE
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'INST_ID': 3120121500453608, 'TRADE_ID': 3120121587923062, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'SERIAL_NUMBER': '13467658909', 'SERIAL_NUMBER_B': None, 'PRODUCT_MODE': '02', 'PRODUCT_ID': 99915593, 'PRODUCT_NAME': '新业务权益包活动', 'PACKAGE_ID': 99966057, 'PACKAGE_NAME': '生活助手包5元档（合约版）', 'CAMPN_ID': 99915593, 'CAMPN_CODE': '99966057', 'CAMPN_NAME': None, 'CAMPN_TYPE': 'XYW', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'SCORE_CHANGED': None, 'CREDIT_VALUE': None, 'MONTHS': 12, 'END_MODE': None, 'ACTOR_PSPT_ID': None, 'ACTOR_PSPT_TYPE_CODE': None, 'ACTOR_PHONE': None, 'ACTOR_NAME': None, 'APPR_STAFF_ID': 'ACHENLY0', 'APPR_TIME': None, 'OUT_NET_PHONE': None, 'CONTRACT_ID': None, 'PROCESS_TAG': '0', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'RELATION_TRADE_ID': 3120121587923062, 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_CAUSE': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2021, 11, 30, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': None, 'DIMENSION_CODE': None, 'MAIN_SERIAL_NUMBER': None, 'SA_REGISTER_TYPE': None, 'SALE_PAYMENT_TYPE': None, 'DEST_SERIAL_NUMBER': None, 'OFFER_ID': 150099966057, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923062, 'PRODUCT_TYPE_CODE': None, 'CONTRACTSR_GIVE_SCORE': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'RSRV_STR11': None, 'RSRV_STR12': None, 'RSRV_STR13': None, 'RSRV_STR14': None, 'RSRV_STR15': None, 'RSRV_STR16': None, 'RSRV_STR17': None, 'RSRV_STR18': None, 'RSRV_STR19': None, 'RSRV_STR20': None, 'RSRV_STR21': None, 'RSRV_STR22': None, 'RSRV_STR23': None, 'RSRV_STR24': None, 'RSRV_STR25': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'OFFER_TYPE': 'K', 'SEND_TYPE': None}
【INFO】-【2020-12-25 20:06:26】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121500453608', '3120121587923062', '12', '3105122612640081', '13467658909', None, '02', '99915593', '新业务权益包活动', '99966057', '生活助手包5元档（合约版）', '99915593', '99966057', None, 'XYW', '0', '0', '0', None, None, '12', None, None, None, None, None, 'ACHENLY0', None, None, None, '0', '2020-12-15 12:04:40', 'ACHENLY0', '3120121587923062', None, None, None, '2020-12-15 12:04:40', '2021-11-30 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, None, None, None, None, '150099966057', '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923062', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'K', None]
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_DISCNT_2020 where trade_id = '3120121587923062'
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:27】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:27】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE_DISCNT
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923062, 'ACCEPT_MONTH': 12, 'USER_ID': 3105122612640081, 'USER_ID_A': -1, 'PACKAGE_ID': -1, 'PRODUCT_ID': 99966057, 'OFFER_TYPE': 'D', 'OFFER_ID': 130099662584, 'DISCNT_CODE': 99662584, 'SPEC_TAG': '0', 'RELATION_TYPE_CODE': None, 'INST_ID': 3120121500453609, 'CAMPN_ID': None, 'OLD_PRODUCT_ID': None, 'OLD_PACKAGE_ID': None, 'START_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'END_DATE': datetime.datetime(2021, 11, 30, 23, 59, 59), 'MODIFY_TAG': '0', 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'OPER_CODE': None, 'IS_NEED_PF': None, 'CREATE_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'CREATE_STAFF_ID': 'ACHENLY0', 'CREATE_DEPART_ID': '00000', 'DONE_CODE': 3120121587923062, 'REMARK': None, 'RSRV_DATE1': None, 'RSRV_DATE2': None, 'RSRV_DATE3': None, 'RSRV_NUM1': None, 'RSRV_NUM2': None, 'RSRV_NUM3': None, 'RSRV_NUM4': None, 'RSRV_NUM5': None, 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_TAG1': None, 'RSRV_TAG2': None, 'RSRV_TAG3': None}
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923062', '12', '3105122612640081', '-1', '-1', '99966057', 'D', '130099662584', '99662584', '0', None, '3120121500453609', None, None, None, '2020-12-15 12:04:40', '2021-11-30 23:59:59', '0', '2020-12-15 12:04:40', 'ACHENLY0', '00000', None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '3120121587923062', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 20:06:27】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE
【INFO】-【2020-12-25 20:06:27】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:27】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:28】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:28】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:28】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:28】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 20:06:28】 - 【DataCheck】 - 【DataCheck.py】 - 第【146】行 >> =====要写入的sheet:TF_B_TRADE
【INFO】-【2020-12-25 20:06:28】 - 【DataCheck】 - 【function.py】 - 第【253】行 >> 处理的字典：{'TRADE_ID': 3120121587923063, 'ACCEPT_MONTH': 12, 'BATCH_ID': None, 'ORDER_ID': 3120121538644203, 'PROD_ORDER_ID': None, 'BPM_ID': None, 'CAMPN_ID': None, 'TRADE_TYPE_CODE': 996, 'PRIORITY': 320, 'SUBSCRIBE_TYPE': 0, 'SUBSCRIBE_STATE': 'Y', 'NEXT_DEAL_TAG': '0', 'IN_MODE_CODE': '0', 'CUST_ID': 3105122604535143, 'CUST_NAME': '153688486624209352', 'USER_ID': 3105122612640081, 'ACCT_ID': 3105122610273482, 'SERIAL_NUMBER': '13467658909', 'NET_TYPE_CODE': '00', 'EPARCHY_CODE': '0731', 'CITY_CODE': 'A31H', 'PRODUCT_ID': 99916037, 'BRAND_CODE': 'G045', 'CUST_ID_B': None, 'USER_ID_B': None, 'ACCT_ID_B': None, 'SERIAL_NUMBER_B': None, 'CUST_CONTACT_ID': None, 'SERV_REQ_ID': None, 'INTF_ID': 'TF_B_TRADE,TF_B_TRADE_SCENE', 'ACCEPT_DATE': datetime.datetime(2020, 12, 15, 12, 4, 40), 'TRADE_STAFF_ID': 'ACHENLY0', 'TRADE_DEPART_ID': '00000', 'TRADE_CITY_CODE': 'A311', 'TRADE_EPARCHY_CODE': '0731', 'TERM_IP': '10.230.47.215', 'OPER_FEE': 0, 'FOREGIFT': 0, 'ADVANCE_PAY': 0, 'INVOICE_NO': None, 'FEE_STATE': '0', 'FEE_TIME': None, 'FEE_STAFF_ID': 'ACHENLY0', 'PROCESS_TAG_SET': '0000000000000000000000000000000000000000', 'OLCOM_TAG': '0', 'FINISH_DATE': None, 'EXEC_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'EXEC_ACTION': None, 'EXEC_RESULT': None, 'EXEC_DESC': None, 'CANCEL_TAG': '0', 'CANCEL_DATE': None, 'CANCEL_STAFF_ID': None, 'CANCEL_DEPART_ID': None, 'CANCEL_CITY_CODE': None, 'CANCEL_EPARCHY_CODE': None, 'UPDATE_TIME': datetime.datetime(2020, 12, 15, 12, 4, 40), 'UPDATE_STAFF_ID': 'ACHENLY0', 'UPDATE_DEPART_ID': '00000', 'REMARK': '关于信用停开机服务规范的需求,mA314 业务区拆分于：20080105 22:52:22', 'PF_TYPE': None, 'IS_NEED_HUMANCHECK': None, 'FREE_RESOURCE_TAG': None, 'PF_WAIT': '0', 'RSRV_STR1': None, 'RSRV_STR2': None, 'RSRV_STR3': None, 'RSRV_STR4': None, 'RSRV_STR5': None, 'RSRV_STR6': None, 'RSRV_STR7': None, 'RSRV_STR8': None, 'RSRV_STR9': None, 'RSRV_STR10': None, 'IDENTITY_CHECK_TYPE': None, 'APPLY_CHANNEL': None, 'CONTACT_TYPE': 'OSP', 'CONTACT_CODE': 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', 'CANCEL_TRADE_ID': None}
【INFO】-【2020-12-25 20:06:28】 - 【DataCheck】 - 【function.py】 - 第【261】行 >> ====字典对应的valuelist：['3120121587923063', '12', None, '3120121538644203', None, None, None, '996', '320', '0', 'Y', '0', '0', '3105122604535143', '153688486624209352', '3105122612640081', '3105122610273482', '13467658909', '00', '0731', 'A31H', '99916037', 'G045', None, None, None, None, None, None, 'TF_B_TRADE,TF_B_TRADE_SCENE', '2020-12-15 12:04:40', 'ACHENLY0', '00000', 'A311', '0731', '10.230.47.215', '0', '0', '0', None, '0', None, 'ACHENLY0', '0000000000000000000000000000000000000000', '0', None, '2020-12-15 12:04:40', None, None, None, '0', None, None, None, None, None, '2020-12-15 12:04:40', 'ACHENLY0', '00000', '关于信用停开机服务规范的需求,mA314 业务区拆分于：20080105 22:52:22', None, None, None, '0', None, None, None, None, None, None, None, None, None, None, None, None, 'OSP', 'OSP_502047_orderIntegratedGoods_http://10.230.47.216:10000/api/order/IFusionBusiOrderOpenService/tradeReg', None]
【INFO】-【2020-12-25 20:06:28】 - 【DataCheck】 - 【DataCheck.py】 - 第【138】行 >> 先查询台帐历史表:select * from TF_B_TRADE_SCENE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 20:06:28】 - 【DataCheck】 - 【DataCheck.py】 - 第【140】行 >> 先查询台帐当前表:select * from TF_B_TRADE_SCENE_2020 where trade_id = '3120121587923063'
【INFO】-【2020-12-25 20:06:28】 - 【DataCheck】 - 【DataCheck.py】 - 第【141】行 >> 表格sheet名:TF_B_TRADE_SCENE
【INFO】-【2020-12-25 20:06:28】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='jour42' ;  
              
【INFO】-【2020-12-25 20:06:28】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_JOUR42/HN_CS_abcd1234@10.230.81.24:10101/HNJOURTSTPDB
【INFO】-【2020-12-25 20:06:28】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 20:06:28】 - 【DataCheck】 - 【DataCheck.py】 - 第【157】行 >> ORA-00942: 表或视图不存在!
【INFO】-【2020-12-25 20:06:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:42】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:42】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 20:06:42】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 20:06:42】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 20:06:42】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 20:06:42】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 20:06:42】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserInfo' AND STATE ='1'
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm11@TF_F_USER@SEL_UserBySerialNum'}]
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'ID': '202003', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserInfo', 'ATTR_NAME': '获取用户信息', 'ATTR_VALUE': 'crm11@TF_F_USER@SEL_UserBySerialNum'}
【INFO】-【2020-12-25 20:06:43】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm11', 'TF_F_USER', 'SEL_UserBySerialNum']
【INFO】-【2020-12-25 20:06:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}, {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm1'}
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': 'SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET\r\nFROM TF_F_USER', 'EXPR_COND': "1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'", 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}, {'ROUTE': 'crm11', 'SQL': "SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='%s'"}]
【INFO】-【2020-12-25 20:06:43】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT TO_CHAR(USER_ID) USER_ID,TO_CHAR(CUST_ID) CUST_ID,SERIAL_NUMBER,USER_TYPE_CODE,REMOVE_TAG,EPARCHY_CODE,USER_STATE_CODESET  FROM TF_F_USER WHERE 1=1 AND REMOVE_TAG = '0' and SERIAL_NUMBER='13974916174'
【INFO】-【2020-12-25 20:06:43】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm11' ;  
              
【INFO】-【2020-12-25 20:06:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM11/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB

【INFO】-【2020-12-25 20:06:43】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 21:22:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:22:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:22:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:22:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserProdInfo' AND STATE ='1'
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'ID': '202004', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserProdInfo', 'ATTR_NAME': '获取用户主产品服务信息', 'ATTR_VALUE': 'crm42@TF_F_USER_PRODUCT@Sel_BY_USERID'}]
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'ID': '202004', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserProdInfo', 'ATTR_NAME': '获取用户主产品服务信息', 'ATTR_VALUE': 'crm42@TF_F_USER_PRODUCT@Sel_BY_USERID'}
【INFO】-【2020-12-25 21:22:00】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm42', 'TF_F_USER_PRODUCT', 'Sel_BY_USERID']
【INFO】-【2020-12-25 21:22:00】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT A.PRODUCT_ID,\r\nT.SERVICE_ID,\r\nA.BRAND_CODE,\r\nA.USER_ID_A,\r\nA.USER_ID,\r\nB.SERIAL_NUMBER,\r\nB.USER_STATE_CODESET , \r\nT.STATE_CODE,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE\r\nFROM TF_F_USER_PRODUCT A ,TF_F_USER B ,TF_F_USER_SVCSTATE T \r\nWHERE a.USER_ID = b.USER_ID\r\nand a.MAIN_TAG ='1'  and t.END_DATE > sysdate AND A.END_DATE > SYSDATE\r\nand a.END_DATE> sysdate\r\nand t.USER_ID = b.USER_ID\r\nand b.REMOVE_TAG ='0'  \r\nand t.state_code ='0' \r\nand t.main_tag ='1'\r\nand B.SERIAL_NUMBER = '%s'\r\norder by a.START_DATE desc", 'EXPR_COND': '', 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT A.PRODUCT_ID,\r\nT.SERVICE_ID,\r\nA.BRAND_CODE,\r\nA.USER_ID_A,\r\nA.USER_ID,\r\nB.SERIAL_NUMBER,\r\nB.USER_STATE_CODESET , \r\nT.STATE_CODE,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE\r\nFROM TF_F_USER_PRODUCT A ,TF_F_USER B ,TF_F_USER_SVCSTATE T \r\nWHERE a.USER_ID = b.USER_ID\r\nand a.MAIN_TAG ='1'  and t.END_DATE > sysdate AND A.END_DATE > SYSDATE\r\nand a.END_DATE> sysdate\r\nand t.USER_ID = b.USER_ID\r\nand b.REMOVE_TAG ='0'  \r\nand t.state_code ='0' \r\nand t.main_tag ='1'\r\nand B.SERIAL_NUMBER = '%s'\r\norder by a.START_DATE desc", 'EXPR_COND': '', 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT A.PRODUCT_ID,  T.SERVICE_ID,  A.BRAND_CODE,  A.USER_ID_A,  A.USER_ID,  B.SERIAL_NUMBER,  B.USER_STATE_CODESET ,   T.STATE_CODE,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE  FROM TF_F_USER_PRODUCT A ,TF_F_USER B ,TF_F_USER_SVCSTATE T   WHERE a.USER_ID = b.USER_ID  and a.MAIN_TAG ='1'  and t.END_DATE > sysdate AND A.END_DATE > SYSDATE  and a.END_DATE> sysdate  and t.USER_ID = b.USER_ID  and b.REMOVE_TAG ='0'    and t.state_code ='0'   and t.main_tag ='1'  and B.SERIAL_NUMBER = '%s'  order by a.START_DATE desc"}
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm42', 'SQL': "SELECT A.PRODUCT_ID,  T.SERVICE_ID,  A.BRAND_CODE,  A.USER_ID_A,  A.USER_ID,  B.SERIAL_NUMBER,  B.USER_STATE_CODESET ,   T.STATE_CODE,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE  FROM TF_F_USER_PRODUCT A ,TF_F_USER B ,TF_F_USER_SVCSTATE T   WHERE a.USER_ID = b.USER_ID  and a.MAIN_TAG ='1'  and t.END_DATE > sysdate AND A.END_DATE > SYSDATE  and a.END_DATE> sysdate  and t.USER_ID = b.USER_ID  and b.REMOVE_TAG ='0'    and t.state_code ='0'   and t.main_tag ='1'  and B.SERIAL_NUMBER = '%s'  order by a.START_DATE desc"}]
【INFO】-【2020-12-25 21:22:00】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT A.PRODUCT_ID,  T.SERVICE_ID,  A.BRAND_CODE,  A.USER_ID_A,  A.USER_ID,  B.SERIAL_NUMBER,  B.USER_STATE_CODESET ,   T.STATE_CODE,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE  FROM TF_F_USER_PRODUCT A ,TF_F_USER B ,TF_F_USER_SVCSTATE T   WHERE a.USER_ID = b.USER_ID  and a.MAIN_TAG ='1'  and t.END_DATE > sysdate AND A.END_DATE > SYSDATE  and a.END_DATE> sysdate  and t.USER_ID = b.USER_ID  and b.REMOVE_TAG ='0'    and t.state_code ='0'   and t.main_tag ='1'  and B.SERIAL_NUMBER = '13974916174'  order by a.START_DATE desc
【INFO】-【2020-12-25 21:22:00】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm42' ;  
              
【INFO】-【2020-12-25 21:22:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM42/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB
【INFO】-【2020-12-25 21:22:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 21:22:01】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 21:22:01】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'PRODUCT_ID': 99813195, 'SERVICE_ID': 0, 'BRAND_CODE': 'G045', 'USER_ID_A': -1, 'USER_ID': 3107090108440948, 'SERIAL_NUMBER': '13974916174', 'USER_STATE_CODESET': '0', 'STATE_CODE': '0', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2020-08-04 06:08:20'}]
【INFO】-【2020-12-25 21:22:01】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'PRODUCT_ID': 99813195, 'SERVICE_ID': 0, 'BRAND_CODE': 'G045', 'USER_ID_A': -1, 'USER_ID': 3107090108440948, 'SERIAL_NUMBER': '13974916174', 'USER_STATE_CODESET': '0', 'STATE_CODE': '0', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2020-08-04 06:08:20'}
【INFO】-【2020-12-25 21:47:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:47:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:47:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:47:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserAcctInfo' AND STATE ='1'
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'ID': '202005', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserAcctInfo', 'ATTR_NAME': '获取用户账户信息', 'ATTR_VALUE': 'crm42@TF_F_ACCOUNT@Sel_BY_SERIALNUM'}]
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'ID': '202005', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserAcctInfo', 'ATTR_NAME': '获取用户账户信息', 'ATTR_VALUE': 'crm42@TF_F_ACCOUNT@Sel_BY_SERIALNUM'}
【INFO】-【2020-12-25 21:47:54】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm42', 'TF_F_ACCOUNT', 'Sel_BY_SERIALNUM']
【INFO】-【2020-12-25 21:47:54】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT A.SERIAL_NUMBER,\r\nA.USER_ID,\r\nA.CUST_ID,\r\nT.ACCT_ID,\r\nT.ACCT_TAG,\r\nT.BANK_CODE,\r\nT.BANK_ACCT_NO,\r\nT.SCORE_VALUE,\r\nT.CREDIT_CLASS_ID,\r\nT.REMOVE_TAG,\r\nTO_CHAR(T.OPEN_DATE,'YYYY-MM-DD HH:MM:SS') OPEN_DATE ,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') OPEN_DATE \r\nFROM TF_F_ACCOUNT T , TF_F_USER A \r\nWHERE A.CUST_ID = T.CUST_ID\r\nAND A.REMOVE_TAG = '0'\r\nAND A.SERIAL_NUMBER = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT A.SERIAL_NUMBER,\r\nA.USER_ID,\r\nA.CUST_ID,\r\nT.ACCT_ID,\r\nT.ACCT_TAG,\r\nT.BANK_CODE,\r\nT.BANK_ACCT_NO,\r\nT.SCORE_VALUE,\r\nT.CREDIT_CLASS_ID,\r\nT.REMOVE_TAG,\r\nTO_CHAR(T.OPEN_DATE,'YYYY-MM-DD HH:MM:SS') OPEN_DATE ,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') OPEN_DATE \r\nFROM TF_F_ACCOUNT T , TF_F_USER A \r\nWHERE A.CUST_ID = T.CUST_ID\r\nAND A.REMOVE_TAG = '0'\r\nAND A.SERIAL_NUMBER = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT A.SERIAL_NUMBER,  A.USER_ID,  A.CUST_ID,  T.ACCT_ID,  T.ACCT_TAG,  T.BANK_CODE,  T.BANK_ACCT_NO,  T.SCORE_VALUE,  T.CREDIT_CLASS_ID,  T.REMOVE_TAG,  TO_CHAR(T.OPEN_DATE,'YYYY-MM-DD HH:MM:SS') OPEN_DATE ,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') OPEN_DATE   FROM TF_F_ACCOUNT T , TF_F_USER A   WHERE A.CUST_ID = T.CUST_ID  AND A.REMOVE_TAG = '0'  AND A.SERIAL_NUMBER = '%s'"}
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm42', 'SQL': "SELECT A.SERIAL_NUMBER,  A.USER_ID,  A.CUST_ID,  T.ACCT_ID,  T.ACCT_TAG,  T.BANK_CODE,  T.BANK_ACCT_NO,  T.SCORE_VALUE,  T.CREDIT_CLASS_ID,  T.REMOVE_TAG,  TO_CHAR(T.OPEN_DATE,'YYYY-MM-DD HH:MM:SS') OPEN_DATE ,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') OPEN_DATE   FROM TF_F_ACCOUNT T , TF_F_USER A   WHERE A.CUST_ID = T.CUST_ID  AND A.REMOVE_TAG = '0'  AND A.SERIAL_NUMBER = '%s'"}]
【INFO】-【2020-12-25 21:47:54】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT A.SERIAL_NUMBER,  A.USER_ID,  A.CUST_ID,  T.ACCT_ID,  T.ACCT_TAG,  T.BANK_CODE,  T.BANK_ACCT_NO,  T.SCORE_VALUE,  T.CREDIT_CLASS_ID,  T.REMOVE_TAG,  TO_CHAR(T.OPEN_DATE,'YYYY-MM-DD HH:MM:SS') OPEN_DATE ,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') OPEN_DATE   FROM TF_F_ACCOUNT T , TF_F_USER A   WHERE A.CUST_ID = T.CUST_ID  AND A.REMOVE_TAG = '0'  AND A.SERIAL_NUMBER = '13974916174'
【INFO】-【2020-12-25 21:47:54】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm42' ;  
              
【INFO】-【2020-12-25 21:47:56】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM42/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB
【INFO】-【2020-12-25 21:47:56】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 21:47:56】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 21:47:56】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'SERIAL_NUMBER': '13974916174', 'USER_ID': 3107090108440948, 'CUST_ID': 3115120613547980, 'ACCT_ID': 3107090101874264, 'ACCT_TAG': '0', 'BANK_CODE': '358059859841528802', 'BANK_ACCT_NO': '788411510819226488', 'SCORE_VALUE': 0, 'CREDIT_CLASS_ID': -1, 'REMOVE_TAG': '0', 'OPEN_DATE': '2015-12-06 07:12:23'}]
【INFO】-【2020-12-25 21:47:56】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'SERIAL_NUMBER': '13974916174', 'USER_ID': 3107090108440948, 'CUST_ID': 3115120613547980, 'ACCT_ID': 3107090101874264, 'ACCT_TAG': '0', 'BANK_CODE': '358059859841528802', 'BANK_ACCT_NO': '788411510819226488', 'SCORE_VALUE': 0, 'CREDIT_CLASS_ID': -1, 'REMOVE_TAG': '0', 'OPEN_DATE': '2015-12-06 07:12:23'}
【INFO】-【2020-12-25 22:09:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:09:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:09:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:09:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetRelaUUInfoBySerialAndRelType' AND STATE ='1'
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[]
【INFO】-【2020-12-25 22:09:11】 - 【DataMap】 - 【DataMap.py】 - 第【200】行 >> 查询结果为空
【INFO】-【2020-12-25 22:10:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:10:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:10:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:10:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetRelaUUInfoBySerialAndRelType' AND STATE ='1'
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'ID': '202008', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetRelaUUInfoBySerialAndRelType', 'ATTR_NAME': '获取UU关系信息', 'ATTR_VALUE': 'crm42@TF_F_RELATION_UU@SEL_BY_RELTYPE'}]
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'ID': '202008', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetRelaUUInfoBySerialAndRelType', 'ATTR_NAME': '获取UU关系信息', 'ATTR_VALUE': 'crm42@TF_F_RELATION_UU@SEL_BY_RELTYPE'}
【INFO】-【2020-12-25 22:10:02】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm42', 'TF_F_RELATION_UU', 'SEL_BY_RELTYPE']
【INFO】-【2020-12-25 22:10:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT T.USER_ID_A,\r\nT.SERIAL_NUMBER_A,\r\nT.USER_ID_B,\r\nT.SERIAL_NUMBER_B,\r\nT.RELATION_TYPE_CODE,\r\nT.ROLE_CODE_A,\r\nT.ROLE_CODE_B,\r\nT.SHORT_CODE,\r\nT.INST_ID,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE\r\n FROM TF_F_RELATION_UU T \r\n WHERE T.END_DATE> SYSDATE \r\n AND  T.SERIAL_NUMBER_B = '%s'\r\n AND T.RELATION_TYPE_CODE = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT T.USER_ID_A,\r\nT.SERIAL_NUMBER_A,\r\nT.USER_ID_B,\r\nT.SERIAL_NUMBER_B,\r\nT.RELATION_TYPE_CODE,\r\nT.ROLE_CODE_A,\r\nT.ROLE_CODE_B,\r\nT.SHORT_CODE,\r\nT.INST_ID,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE\r\n FROM TF_F_RELATION_UU T \r\n WHERE T.END_DATE> SYSDATE \r\n AND  T.SERIAL_NUMBER_B = '%s'\r\n AND T.RELATION_TYPE_CODE = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT T.USER_ID_A,  T.SERIAL_NUMBER_A,  T.USER_ID_B,  T.SERIAL_NUMBER_B,  T.RELATION_TYPE_CODE,  T.ROLE_CODE_A,  T.ROLE_CODE_B,  T.SHORT_CODE,  T.INST_ID,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE   FROM TF_F_RELATION_UU T    WHERE T.END_DATE> SYSDATE    AND  T.SERIAL_NUMBER_B = '%s'   AND T.RELATION_TYPE_CODE = '%s'"}
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm42', 'SQL': "SELECT T.USER_ID_A,  T.SERIAL_NUMBER_A,  T.USER_ID_B,  T.SERIAL_NUMBER_B,  T.RELATION_TYPE_CODE,  T.ROLE_CODE_A,  T.ROLE_CODE_B,  T.SHORT_CODE,  T.INST_ID,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE   FROM TF_F_RELATION_UU T    WHERE T.END_DATE> SYSDATE    AND  T.SERIAL_NUMBER_B = '%s'   AND T.RELATION_TYPE_CODE = '%s'"}]
【INFO】-【2020-12-25 22:10:02】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT T.USER_ID_A,  T.SERIAL_NUMBER_A,  T.USER_ID_B,  T.SERIAL_NUMBER_B,  T.RELATION_TYPE_CODE,  T.ROLE_CODE_A,  T.ROLE_CODE_B,  T.SHORT_CODE,  T.INST_ID,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE   FROM TF_F_RELATION_UU T    WHERE T.END_DATE> SYSDATE    AND  T.SERIAL_NUMBER_B = '13875931785'   AND T.RELATION_TYPE_CODE = '20'
【INFO】-【2020-12-25 22:10:02】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm42' ;  
              
【INFO】-【2020-12-25 22:10:03】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM42/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB
【INFO】-【2020-12-25 22:10:03】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 22:10:03】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 22:10:03】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'USER_ID_A': 3109081658417417, 'SERIAL_NUMBER_A': '7311NXN352', 'USER_ID_B': 3108122040190069, 'SERIAL_NUMBER_B': '13875931785', 'RELATION_TYPE_CODE': '20', 'ROLE_CODE_A': '0', 'ROLE_CODE_B': '1', 'SHORT_CODE': '6785', 'INST_ID': 3100002170997791, 'UPDATE_TIME': None, 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2009-08-18 09:08:30'}]
【INFO】-【2020-12-25 22:10:03】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'USER_ID_A': 3109081658417417, 'SERIAL_NUMBER_A': '7311NXN352', 'USER_ID_B': 3108122040190069, 'SERIAL_NUMBER_B': '13875931785', 'RELATION_TYPE_CODE': '20', 'ROLE_CODE_A': '0', 'ROLE_CODE_B': '1', 'SHORT_CODE': '6785', 'INST_ID': 3100002170997791, 'UPDATE_TIME': None, 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2009-08-18 09:08:30'}
【INFO】-【2020-12-25 22:17:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:17:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:17:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:17:02】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetRelaBBInfoBySerialAndRelType' AND STATE ='1'
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[]
【INFO】-【2020-12-25 22:17:02】 - 【DataMap】 - 【DataMap.py】 - 第【200】行 >> 查询结果为空
【INFO】-【2020-12-25 22:18:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:18:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:18:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:18:36】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetRelaBBInfoBySerialAndRelType' AND STATE ='1'
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[]
【INFO】-【2020-12-25 22:18:36】 - 【DataMap】 - 【DataMap.py】 - 第【200】行 >> 查询结果为空
【INFO】-【2020-12-25 22:20:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:20:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:20:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:20:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetRelaBBInfoBySerialAndRelType' AND STATE ='1'
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'ID': '202011', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetRelaBBInfoBySerialAndRelType', 'ATTR_NAME': '获取UU关系信息', 'ATTR_VALUE': 'crm42@TF_F_RELATION_BB@SEL_BY_RELTYPE'}]
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'ID': '202011', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetRelaBBInfoBySerialAndRelType', 'ATTR_NAME': '获取UU关系信息', 'ATTR_VALUE': 'crm42@TF_F_RELATION_BB@SEL_BY_RELTYPE'}
【INFO】-【2020-12-25 22:20:13】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm42', 'TF_F_RELATION_BB', 'SEL_BY_RELTYPE']
【INFO】-【2020-12-25 22:20:13】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT T.USER_ID_A,\r\nT.SERIAL_NUMBER_A,\r\nT.USER_ID_B,\r\nT.SERIAL_NUMBER_B,\r\nT.RELATION_TYPE_CODE,\r\nT.ROLE_CODE_A,\r\nT.ROLE_CODE_B,\r\nT.SHORT_CODE,\r\nT.INST_ID,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE\r\n FROM TF_F_RELATION_BB T \r\n WHERE T.END_DATE> SYSDATE \r\n AND  T.SERIAL_NUMBER_B = '%s'\r\n AND T.RELATION_TYPE_CODE = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT T.USER_ID_A,\r\nT.SERIAL_NUMBER_A,\r\nT.USER_ID_B,\r\nT.SERIAL_NUMBER_B,\r\nT.RELATION_TYPE_CODE,\r\nT.ROLE_CODE_A,\r\nT.ROLE_CODE_B,\r\nT.SHORT_CODE,\r\nT.INST_ID,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE\r\n FROM TF_F_RELATION_BB T \r\n WHERE T.END_DATE> SYSDATE \r\n AND  T.SERIAL_NUMBER_B = '%s'\r\n AND T.RELATION_TYPE_CODE = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT T.USER_ID_A,  T.SERIAL_NUMBER_A,  T.USER_ID_B,  T.SERIAL_NUMBER_B,  T.RELATION_TYPE_CODE,  T.ROLE_CODE_A,  T.ROLE_CODE_B,  T.SHORT_CODE,  T.INST_ID,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE   FROM TF_F_RELATION_BB T    WHERE T.END_DATE> SYSDATE    AND  T.SERIAL_NUMBER_B = '%s'   AND T.RELATION_TYPE_CODE = '%s'"}
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm42', 'SQL': "SELECT T.USER_ID_A,  T.SERIAL_NUMBER_A,  T.USER_ID_B,  T.SERIAL_NUMBER_B,  T.RELATION_TYPE_CODE,  T.ROLE_CODE_A,  T.ROLE_CODE_B,  T.SHORT_CODE,  T.INST_ID,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE   FROM TF_F_RELATION_BB T    WHERE T.END_DATE> SYSDATE    AND  T.SERIAL_NUMBER_B = '%s'   AND T.RELATION_TYPE_CODE = '%s'"}]
【INFO】-【2020-12-25 22:20:13】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT T.USER_ID_A,  T.SERIAL_NUMBER_A,  T.USER_ID_B,  T.SERIAL_NUMBER_B,  T.RELATION_TYPE_CODE,  T.ROLE_CODE_A,  T.ROLE_CODE_B,  T.SHORT_CODE,  T.INST_ID,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME ,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE   FROM TF_F_RELATION_BB T    WHERE T.END_DATE> SYSDATE    AND  T.SERIAL_NUMBER_B = '13875931785'   AND T.RELATION_TYPE_CODE = '20'
【INFO】-【2020-12-25 22:20:13】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm42' ;  
              
【INFO】-【2020-12-25 22:20:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM42/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB
【INFO】-【2020-12-25 22:20:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 22:20:14】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 22:20:14】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[]
【INFO】-【2020-12-25 22:20:14】 - 【DataMap】 - 【DataMap.py】 - 第【200】行 >> 查询结果为空
【INFO】-【2020-12-25 22:29:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:29:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:29:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:29:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}]
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE\r\nFROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'", 'EXPR_COND': '', 'ROUTE': '-1'}
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': '-1', 'SQL': "SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = '%s' AND ATTR_CODE ='%s' AND STATE ='1'"}]
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT ID,ID_TYPE,ATTR_CODE,ATTR_NAME,ATTR_VALUE  FROM AUTOTEST_FACTORY WHERE ID_TYPE = 'sql' AND ATTR_CODE ='GetUserAttrInfo' AND STATE ='1'
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'ID': '202012', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserAttrInfo', 'ATTR_NAME': '获取订购属性信息', 'ATTR_VALUE': 'crm42@TF_F_USER_ATTR@Sel_BY_SERIALNUM'}]
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【202】行 >> 返回当前查询结果:{'ID': '202012', 'ID_TYPE': 'sql', 'ATTR_CODE': 'GetUserAttrInfo', 'ATTR_NAME': '获取订购属性信息', 'ATTR_VALUE': 'crm42@TF_F_USER_ATTR@Sel_BY_SERIALNUM'}
【INFO】-【2020-12-25 22:29:11】 - 【DataFact】 - 【DataFact.py】 - 第【47】行 >> 返回的attrValue:['crm42', 'TF_F_USER_ATTR', 'Sel_BY_SERIALNUM']
【INFO】-【2020-12-25 22:29:11】 - 【MyOracle】 - 【OracleOper.py】 - 第【44】行 >> 连接的数据库是:(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.230.59.93)(PORT=10909))(CONNECT_DATA=(SID=qhcrmdb)))
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【37】行 >> 查询DATA_MAPPING结果:[{'SQL_STMT': "SELECT A.SERIAL_NUMBER,\r\nA.USER_ID,\r\nT.INST_TYPE,\r\nTO_CHAR(T.INST_ID) INST_ID,\r\nT.OFFER_TYPE,\r\nT.ATTR_CODE,\r\nT.ATTR_VALUE,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE ,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME \r\nFROM TF_F_USER_ATTR T , TF_F_USER A \r\nWHERE A.USER_ID = T.USER_ID\r\nAND A.REMOVE_TAG = '0'\r\nAND A.SERIAL_NUMBER = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}]
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【47】行 >> {'SQL_STMT': "SELECT A.SERIAL_NUMBER,\r\nA.USER_ID,\r\nT.INST_TYPE,\r\nTO_CHAR(T.INST_ID) INST_ID,\r\nT.OFFER_TYPE,\r\nT.ATTR_CODE,\r\nT.ATTR_VALUE,\r\nTO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,\r\nTO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE ,\r\nTO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME \r\nFROM TF_F_USER_ATTR T , TF_F_USER A \r\nWHERE A.USER_ID = T.USER_ID\r\nAND A.REMOVE_TAG = '0'\r\nAND A.SERIAL_NUMBER = '%s'", 'EXPR_COND': '', 'ROUTE': 'crm42'}
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【48】行 >> 
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【55】行 >> 查询返回的字典结果:{'ROUTE': 'crm42', 'SQL': "SELECT A.SERIAL_NUMBER,  A.USER_ID,  T.INST_TYPE,  TO_CHAR(T.INST_ID) INST_ID,  T.OFFER_TYPE,  T.ATTR_CODE,  T.ATTR_VALUE,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE ,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME   FROM TF_F_USER_ATTR T , TF_F_USER A   WHERE A.USER_ID = T.USER_ID  AND A.REMOVE_TAG = '0'  AND A.SERIAL_NUMBER = '%s'"}
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【57】行 >> 查询DataMapping结果返回:[{'ROUTE': 'crm42', 'SQL': "SELECT A.SERIAL_NUMBER,  A.USER_ID,  T.INST_TYPE,  TO_CHAR(T.INST_ID) INST_ID,  T.OFFER_TYPE,  T.ATTR_CODE,  T.ATTR_VALUE,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE ,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME   FROM TF_F_USER_ATTR T , TF_F_USER A   WHERE A.USER_ID = T.USER_ID  AND A.REMOVE_TAG = '0'  AND A.SERIAL_NUMBER = '%s'"}]
【INFO】-【2020-12-25 22:29:11】 - 【DataMap】 - 【DataMap.py】 - 第【189】行 >> ======查询sql语句:SELECT A.SERIAL_NUMBER,  A.USER_ID,  T.INST_TYPE,  TO_CHAR(T.INST_ID) INST_ID,  T.OFFER_TYPE,  T.ATTR_CODE,  T.ATTR_VALUE,  TO_CHAR(T.END_DATE,'YYYY-MM-DD HH:MM:SS') END_DATE ,  TO_CHAR(T.START_DATE,'YYYY-MM-DD HH:MM:SS') START_DATE ,  TO_CHAR(T.UPDATE_TIME,'YYYY-MM-DD HH:MM:SS') UPDATE_TIME   FROM TF_F_USER_ATTR T , TF_F_USER A   WHERE A.USER_ID = T.USER_ID  AND A.REMOVE_TAG = '0'  AND A.SERIAL_NUMBER = '13875931785'
【INFO】-【2020-12-25 22:29:11】 - 【MyDBOper】 - 【SysPara.py】 - 第【33】行 >> select param_value from autotest_sys_para where prov_Code ='HNAN' and  param_Attr ='DBRoute'  and  param_Code ='crm42' ;  
              
【INFO】-【2020-12-25 22:29:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【67】行 >> 连接的DB：UOP_CRM42/HN_CS_abcd1234@10.230.81.24:10201/HNCUSTTSTPDB
【INFO】-【2020-12-25 22:29:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【69】行 >> Connect DB successfully!
【INFO】-【2020-12-25 22:29:12】 - 【MyOracle】 - 【OracleOper.py】 - 第【77】行 >> Database closed!
【INFO】-【2020-12-25 22:29:12】 - 【DataMap】 - 【DataMap.py】 - 第【198】行 >> ======查询sql语句数据库返回结果:[{'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'S', 'INST_ID': '3100002738727751', 'OFFER_TYPE': 'S', 'ATTR_CODE': 'G138BOSS1', 'ATTR_VALUE': '13875931785@139.com', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2011-09-11 02:09:00', 'UPDATE_TIME': '2011-09-11 02:09:01'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'S', 'INST_ID': '3100002738727752', 'OFFER_TYPE': 'S', 'ATTR_CODE': 'G138BOSS2', 'ATTR_VALUE': '1', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2011-09-11 02:09:00', 'UPDATE_TIME': '2011-09-11 02:09:01'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693810', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'ACCOUNTNAME', 'ATTR_VALUE': '黄谷中', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693807', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'CARDNUM', 'ATTR_VALUE': '430124195609124716', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693731', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'CARDTYPE', 'ATTR_VALUE': '00', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3119081408372965', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'IPTV_ID', 'ATTR_VALUE': '13875931785d001', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2019-08-14 08:08:19', 'UPDATE_TIME': '2019-08-14 08:08:19'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3120081125304152', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'IPTV_ID', 'ATTR_VALUE': '13875931785d001', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2020-08-11 10:08:17', 'UPDATE_TIME': '2020-08-11 10:08:44'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3120081336882407', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'IPTV_ID', 'ATTR_VALUE': '13875931785d001', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2020-08-13 09:08:28', 'UPDATE_TIME': '2020-08-13 09:08:55'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693730', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'REGVERSION', 'ATTR_VALUE': '2.0', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}]
【INFO】-【2020-12-25 22:29:12】 - 【DataMap】 - 【DataMap.py】 - 第【205】行 >> 返回当前查询结果:[{'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'S', 'INST_ID': '3100002738727751', 'OFFER_TYPE': 'S', 'ATTR_CODE': 'G138BOSS1', 'ATTR_VALUE': '13875931785@139.com', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2011-09-11 02:09:00', 'UPDATE_TIME': '2011-09-11 02:09:01'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'S', 'INST_ID': '3100002738727752', 'OFFER_TYPE': 'S', 'ATTR_CODE': 'G138BOSS2', 'ATTR_VALUE': '1', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2011-09-11 02:09:00', 'UPDATE_TIME': '2011-09-11 02:09:01'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693810', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'ACCOUNTNAME', 'ATTR_VALUE': '黄谷中', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693807', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'CARDNUM', 'ATTR_VALUE': '430124195609124716', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693731', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'CARDTYPE', 'ATTR_VALUE': '00', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3119081408372965', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'IPTV_ID', 'ATTR_VALUE': '13875931785d001', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2019-08-14 08:08:19', 'UPDATE_TIME': '2019-08-14 08:08:19'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3120081125304152', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'IPTV_ID', 'ATTR_VALUE': '13875931785d001', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2020-08-11 10:08:17', 'UPDATE_TIME': '2020-08-11 10:08:44'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3120081336882407', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'IPTV_ID', 'ATTR_VALUE': '13875931785d001', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2020-08-13 09:08:28', 'UPDATE_TIME': '2020-08-13 09:08:55'}, {'SERIAL_NUMBER': '13875931785', 'USER_ID': 3108122040190069, 'INST_TYPE': 'Z', 'INST_ID': '3100002694693730', 'OFFER_TYPE': 'Z', 'ATTR_CODE': 'REGVERSION', 'ATTR_VALUE': '2.0', 'END_DATE': '2050-12-31 11:12:59', 'START_DATE': '2013-01-31 02:01:16', 'UPDATE_TIME': '2013-01-31 02:01:53'}]
